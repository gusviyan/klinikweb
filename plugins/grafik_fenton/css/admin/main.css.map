{"version":3,"file":"main.css","mappings":";AAoGE,UAxDA,mBCZc,CDad,oBCbc,CDcd,gBCba,CDcb,aCXoB,CDoEpB,iDAEE,aAGF,kDAEE,0BAGF,iCAnFA,oBAoF4B,CAnF5B,0BAmFsC,CAhFpC,gBAmFF,+BAvFA,sBAwF4B,CAvF5B,0BAuFwC,CApFtC,gBAuFF,+BA3FA,oBA4F4B,CA3F5B,wBA2FsC,CAtFpC,iBAyFF,6BA/FA,oBAgG4B,CA/F5B,0BA+FsC,CA5FpC,gBA+FF,+CAnGA,oBAoG4B,CAnG5B,sBAmGsC,CA5FpC,kBA+FF,6CAvGA,sBAwG4B,CAvG5B,sBAuGwC,CAhGtC,kBAmGF,kEA3GA,oBA4G4B,CA3G5B,0BA2GsC,CAxGpC,gBA2GF,gEA/GA,sBAgH4B,CA/G5B,0BA+GwC,CA5GtC,gBA+GF,gEAnHA,kBAoH4B,CAnH5B,wBAmHoC,CA9GlC,iBAiHF,8DAvHA,kBAwH4B,CAvH5B,0BAuHoC,CApHlC,gBAuHF,SAvGA,qBCZc,CDad,gBCXc,CDcZ,oBCfgB,CDsHlB,oBACE,SCrHsB,CDwHxB,UAtGA,iBCbc,CDcd,oBCZe,CDqHf,SArGA,UACA,gBCrBc,CD6Hd,SAhGA,YACA,eCxBgB,CD2HhB,QA/FA,UACA,iBC1Ba,CD4Hb,gBA9FA,UACA,iBC5Be,CDgCf,+FACE,cA+FY,CA5Fd,iDACE,YA2FY,CAhGd,+FACE,cA+FY,CA5Fd,iDACE,YA2FY,CAhGd,+FACE,cA+FY,CA5Fd,iDACE,YA2FY,CAhGd,+FACE,cA+FY,CA5Fd,iDACE,YA2FY,CAhGd,+FACE,cA+FY,CA5Fd,iDACE,YA2FY,CAhGd,+FACE,cA+FY,CA5Fd,iDACE,YA2FY,CAhGd,+FACE,cA+FY,CA5Fd,iDACE,YA2FY,CAhGd,+FACE,cA+FY,CA5Fd,iDACE,YA2FY,CAhGd,+FACE,cA+FY,CA5Fd,iDACE,YA2FY,CAhGd,+FACE,cA+FY,CA5Fd,iDACE,YA2FY,CAhGd,+FACE,cA+FY,CA5Fd,iDACE,YA2FY,CAhGd,+FACE,cA+FY,CA5Fd,iDACE,YA2FY,CAhGd,+FACE,cA+FY,CA5Fd,iDACE,YA2FY,CAhGd,+FACE,cA+FY,CA5Fd,iDACE,YA2FY,CAhGd,+FACE,cA+FY,CA5Fd,iDACE,YA2FY,CAaV,WAnMJ,cACA,kBACA,UAHyC,CAKzC,kBACE,cACA,WACA,WACA,QACA,SACA,oBAGF,iBACE,WACA,cACA,WAGF,eACE,cACA,kBACA,MACA,OA4KE,iBAnMJ,cACA,kBACA,UAHyC,CAKzC,wBACE,cACA,WACA,WACA,QACA,SACA,sBAGF,uBACE,WACA,cACA,WAGF,qBACE,cACA,kBACA,MACA,OA4KE,iBAnMJ,cACA,kBACA,UAHyC,CAKzC,wBACE,cACA,WACA,WACA,QACA,SACA,8BAGF,uBACE,WACA,cACA,WAGF,qBACE,cACA,kBACA,MACA,OA4KE,gBAnMJ,cACA,kBACA,UAHyC,CAKzC,uBACE,cACA,WACA,WACA,QACA,SACA,8BAGF,sBACE,WACA,cACA,WAGF,oBACE,cACA,kBACA,MACA,OA4KE,gBAnMJ,cACA,kBACA,UAHyC,CAKzC,uBACE,cACA,WACA,WACA,QACA,SACA,mBAGF,sBACE,WACA,cACA,WAGF,oBACE,cACA,kBACA,MACA,OA4KE,mBAnMJ,cACA,kBACA,UAHyC,CAKzC,0BACE,cACA,WACA,WACA,QACA,SACA,mBAGF,yBACE,WACA,cACA,WAGF,uBACE,cACA,kBACA,MACA,OA4KE,kBAnMJ,cACA,kBACA,UAHyC,CAKzC,yBACE,cACA,WACA,WACA,QACA,SACA,8BAGF,wBACE,WACA,cACA,WAGF,sBACE,cACA,kBACA,MACA,OA4KE,gBAnMJ,cACA,kBACA,UAHyC,CAKzC,uBACE,cACA,WACA,WACA,QACA,SACA,qBAGF,sBACE,WACA,cACA,WAGF,oBACE,cACA,kBACA,MACA,OA4KE,mBAnMJ,cACA,kBACA,UAHyC,CAKzC,0BACE,cACA,WACA,WACA,QACA,SACA,6BAGF,yBACE,WACA,cACA,WAGF,uBACE,cACA,kBACA,MACA,OA4KE,gBAnMJ,cACA,kBACA,UAHyC,CAKzC,uBACE,cACA,WACA,WACA,QACA,SACA,mBAGF,sBACE,WACA,cACA,WAGF,oBACE,cACA,kBACA,MACA,OA4KE,kBAnMJ,cACA,kBACA,UAHyC,CAKzC,yBACE,cACA,WACA,WACA,QACA,SACA,sBAGF,wBACE,WACA,cACA,WAGF,sBACE,cACA,kBACA,MACA,OA4KE,kBAnMJ,cACA,kBACA,UAHyC,CAKzC,yBACE,cACA,WACA,WACA,QACA,SACA,8BAGF,wBACE,WACA,cACA,WAGF,sBACE,cACA,kBACA,MACA,OA4KE,WAnMJ,cACA,kBACA,UAHyC,CAKzC,kBACE,cACA,WACA,WACA,QACA,SACA,mBAGF,iBACE,WACA,cACA,WAGF,eACE,cACA,kBACA,MACA,OA4KE,gBAnMJ,cACA,kBACA,UAHyC,CAKzC,uBACE,cACA,WACA,WACA,QACA,SACA,mBAGF,sBACE,WACA,cACA,WAGF,oBACE,cACA,kBACA,MACA,OA4KE,mBAnMJ,cACA,kBACA,UAHyC,CAKzC,0BACE,cACA,WACA,WACA,QACA,SACA,qBAGF,yBACE,WACA,cACA,WAGF,uBACE,cACA,kBACA,MACA,OA4KE,kBAnMJ,cACA,kBACA,UAHyC,CAKzC,yBACE,cACA,WACA,WACA,QACA,SACA,8BAGF,wBACE,WACA,cACA,WAGF,sBACE,cACA,kBACA,MACA,OA4KE,kBAnMJ,cACA,kBACA,UAHyC,CAKzC,yBACE,cACA,WACA,WACA,QACA,SACA,mBAGF,wBACE,WACA,cACA,WAGF,sBACE,cACA,kBACA,MACA,OEFJ,OACE,YAIF,sBAIE,iBAEA,2BAGF,sBAEE,iBACA,yBAGF,sBAEE,iBACA,2BAIF,qEAGE,aAGF,WACE,eACA,kBACA,WAEA,cAEE,kBACA,kBACA,mBACA,kBAGF,qBACE,WACA,YACA,kBACA,OACA,WACA,+BACA,kBAGF,8BACE,yBAGF,4BACE,kBACA,MACA,QAOA,+BACE,wBAHE,CAIF,oBAJE,CAEJ,+BACE,wBAHE,CAIF,oBAJE,CAEJ,+BACE,wBAHE,CAIF,oBAJE,CAEJ,+BACE,wBAHE,CAIF,oBAJE,CAEJ,+BACE,wBAHE,CAIF,oBAJE,CAEJ,+BACE,wBAHE,CAIF,oBAJE,CAEJ,+BACE,wBAHE,CAIF,oBAJE,CAEJ,+BACE,wBAHE,CAIF,oBAJE,CAEJ,+BACE,wBAHE,CAIF,oBAJE,CAEJ,+BACE,wBAHE,CAIF,oBAJE,CAEJ,+BACE,wBAHE,CAIF,oBAJE,CAEJ,+BACE,wBAHE,CAIF,oBAJE,CAEJ,+BACE,wBAHE,CAIF,oBAJE,CAEJ,+BACE,wBAHE,CAIF,oBAJE,CAEJ,+BACE,wBAHE,CAIF,oBAJE,C;AC5FA,KAER,eACE,IAQF,kCACE,gBACA,cACA,yBACA,YAEA,YACE,WAGF,YACE,QAIJ,YAEE,mBACA,uBACA,mBACA,SACA,OAGF,2BACE,yDACA,yBACA,4BACA,wBACA,mBAEA,iBACA,wBACA,qBACA,2BACA,wBACA,yBACA,wBACA,eAEA,YAEA,gBACA,aACA,aAEA,sBACE,kBAIJ,YAEE,sBACA,QAGF,kCACE,gBACA,gBACA,4CACA,yBAEA,kBACA,UAGF,iBACE,sBAIA,WACE,qBAGF,WACE,SAIJ,gBACE,kBACA,oBACA,gBACA,aACA,SAGF,gBACE,uBACA,aACA,WAGF,WACE,eAGF,YACE,uBAGF,uBACE,mBACA,UAGF,kBACE,yBAGF,QAEE,UACA,gBACA,aAGF,mBACE,WACA,WACA,eAGF,oBACE,gBACA,UAGF,oBACE,gBACA,eAGF,gBACE,oBACA,QAGF,YACE,UACA,kBACA,8CAGF,oBACE,QAGF,oBACE,OAIF,UACE,yBACA,sBAIF,eACE,IAGF,eACE,iBACA,OAGF,YAEE,sBACA,gBACA,SAGF,YACE,2CAIF,sCAGE,aAOE,UAIF,iBACE,YACA,aACA,IAGF,qBACE,aACA,sBAGF,gBACE,oBAIF,eACE,WAIF,oBACE,gBACA,mBACA,mBACA,iBACA,iB","sources":["webpack://child-growth-charts/./node_modules/chartist/dist/index.scss","webpack://child-growth-charts/./node_modules/chartist/dist/_settings.scss","webpack://child-growth-charts/./src/styles/chart.scss","webpack://child-growth-charts/./src/styles/index.scss"],"sourcesContent":["@import \"settings\";\n\n@mixin ct-responsive-svg-container($width: 100%, $ratio: $ct-container-ratio) {\n  display: block;\n  position: relative;\n  width: $width;\n\n  &:before {\n    display: block;\n    float: left;\n    content: \"\";\n    width: 0;\n    height: 0;\n    padding-bottom: $ratio * 100%;\n  }\n\n  &:after {\n    content: \"\";\n    display: table;\n    clear: both;\n  }\n\n  > svg {\n    display: block;\n    position: absolute;\n    top: 0;\n    left: 0;\n  }\n}\n\n@mixin ct-align-justify($ct-text-align: $ct-text-align, $ct-text-justify: $ct-text-justify) {\n  align-items: $ct-text-align;\n  justify-content: $ct-text-justify;\n  // Fallback to text-align for non-flex browsers\n  @if ($ct-text-justify == 'flex-start') {\n    text-align: left;\n  } @else if ($ct-text-justify == 'flex-end') {\n    text-align: right;\n  } @else {\n    text-align: center;\n  }\n}\n\n@mixin ct-chart-label($ct-text-color: $ct-text-color, $ct-text-size: $ct-text-size, $ct-text-line-height: $ct-text-line-height) {\n  fill: $ct-text-color;\n  color: $ct-text-color;\n  font-size: $ct-text-size;\n  line-height: $ct-text-line-height;\n}\n\n@mixin ct-chart-grid($ct-grid-color: $ct-grid-color, $ct-grid-width: $ct-grid-width, $ct-grid-dasharray: $ct-grid-dasharray) {\n  stroke: $ct-grid-color;\n  stroke-width: $ct-grid-width;\n\n  @if ($ct-grid-dasharray) {\n    stroke-dasharray: $ct-grid-dasharray;\n  }\n}\n\n@mixin ct-chart-point($ct-point-size: $ct-point-size, $ct-point-shape: $ct-point-shape) {\n  stroke-width: $ct-point-size;\n  stroke-linecap: $ct-point-shape;\n}\n\n@mixin ct-chart-line($ct-line-width: $ct-line-width, $ct-line-dasharray: $ct-line-dasharray) {\n  fill: none;\n  stroke-width: $ct-line-width;\n\n  @if ($ct-line-dasharray) {\n    stroke-dasharray: $ct-line-dasharray;\n  }\n}\n\n@mixin ct-chart-area($ct-area-opacity: $ct-area-opacity) {\n  stroke: none;\n  fill-opacity: $ct-area-opacity;\n}\n\n@mixin ct-chart-bar($ct-bar-width: $ct-bar-width) {\n  fill: none;\n  stroke-width: $ct-bar-width;\n}\n\n@mixin ct-chart-donut($ct-donut-width: $ct-donut-width) {\n  fill: none;\n  stroke-width: $ct-donut-width;\n}\n\n@mixin ct-chart-series-color($color) {\n  .#{$ct-class-point}, .#{$ct-class-line}, .#{$ct-class-bar}, .#{$ct-class-slice-donut} {\n    stroke: $color;\n  }\n\n  .#{$ct-class-slice-pie}, .#{$ct-class-area} {\n    fill: $color;\n  }\n}\n\n@mixin ct-chart($ct-container-ratio: $ct-container-ratio, $ct-text-color: $ct-text-color, $ct-text-size: $ct-text-size, $ct-grid-color: $ct-grid-color, $ct-grid-width: $ct-grid-width, $ct-grid-dasharray: $ct-grid-dasharray, $ct-point-size: $ct-point-size, $ct-point-shape: $ct-point-shape, $ct-line-width: $ct-line-width, $ct-bar-width: $ct-bar-width, $ct-donut-width: $ct-donut-width, $ct-series-names: $ct-series-names, $ct-series-colors: $ct-series-colors) {\n\n  .#{$ct-class-label} {\n    @include ct-chart-label($ct-text-color, $ct-text-size);\n  }\n\n  .#{$ct-class-chart-line} .#{$ct-class-label},\n  .#{$ct-class-chart-bar} .#{$ct-class-label} {\n    display: flex;\n  }\n\n  .#{$ct-class-chart-pie} .#{$ct-class-label},\n  .#{$ct-class-chart-donut} .#{$ct-class-label} {\n    dominant-baseline: central;\n  }\n\n  .#{$ct-class-label}.#{$ct-class-horizontal}.#{$ct-class-start} {\n    @include ct-align-justify(flex-end, flex-start);\n  }\n\n  .#{$ct-class-label}.#{$ct-class-horizontal}.#{$ct-class-end} {\n    @include ct-align-justify(flex-start, flex-start);\n  }\n\n  .#{$ct-class-label}.#{$ct-class-vertical}.#{$ct-class-start} {\n    @include ct-align-justify(flex-end, flex-end);\n  }\n\n  .#{$ct-class-label}.#{$ct-class-vertical}.#{$ct-class-end} {\n    @include ct-align-justify(flex-end, flex-start);\n  }\n\n  .#{$ct-class-chart-bar} .#{$ct-class-label}.#{$ct-class-horizontal}.#{$ct-class-start} {\n    @include ct-align-justify(flex-end, center);\n  }\n\n  .#{$ct-class-chart-bar} .#{$ct-class-label}.#{$ct-class-horizontal}.#{$ct-class-end} {\n    @include ct-align-justify(flex-start, center);\n  }\n\n  .#{$ct-class-chart-bar}.#{$ct-class-horizontal-bars} .#{$ct-class-label}.#{$ct-class-horizontal}.#{$ct-class-start} {\n    @include ct-align-justify(flex-end, flex-start);\n  }\n\n  .#{$ct-class-chart-bar}.#{$ct-class-horizontal-bars} .#{$ct-class-label}.#{$ct-class-horizontal}.#{$ct-class-end} {\n    @include ct-align-justify(flex-start, flex-start);\n  }\n\n  .#{$ct-class-chart-bar}.#{$ct-class-horizontal-bars} .#{$ct-class-label}.#{$ct-class-vertical}.#{$ct-class-start} {\n    @include ct-align-justify(center, flex-end);\n  }\n\n  .#{$ct-class-chart-bar}.#{$ct-class-horizontal-bars} .#{$ct-class-label}.#{$ct-class-vertical}.#{$ct-class-end} {\n    @include ct-align-justify(center, flex-start);\n  }\n\n  .#{$ct-class-grid} {\n    @include ct-chart-grid($ct-grid-color, $ct-grid-width, $ct-grid-dasharray);\n  }\n\n  .#{$ct-class-grid-background} {\n    fill: $ct-grid-background-fill;\n  }\n\n  .#{$ct-class-point} {\n    @include ct-chart-point($ct-point-size, $ct-point-shape);\n  }\n\n  .#{$ct-class-line} {\n    @include ct-chart-line($ct-line-width);\n  }\n\n  .#{$ct-class-area} {\n    @include ct-chart-area();\n  }\n\n  .#{$ct-class-bar} {\n    @include ct-chart-bar($ct-bar-width);\n  }\n\n  .#{$ct-class-slice-donut} {\n    @include ct-chart-donut($ct-donut-width);\n  }\n\n  @if $ct-include-colored-series {\n    @for $i from 0 to length($ct-series-names) {\n      .#{$ct-class-series}-#{nth($ct-series-names, $i + 1)} {\n        $color: nth($ct-series-colors, $i + 1);\n\n        @include ct-chart-series-color($color);\n      }\n    }\n  }\n}\n\n@if $ct-include-classes {\n  @include ct-chart();\n\n  @if $ct-include-alternative-responsive-containers {\n    @for $i from 0 to length($ct-scales-names) {\n      .#{nth($ct-scales-names, $i + 1)} {\n        @include ct-responsive-svg-container($ratio: nth($ct-scales, $i + 1));\n      }\n    }\n  }\n}\n","@use \"sass:math\";\n\n// Scales for responsive SVG containers\n$ct-scales: ((1), math.div(15, 16), math.div(8, 9), math.div(5, 6), math.div(4, 5), math.div(3, 4), math.div(2, 3), math.div(5, 8), math.div(1, 1.618), math.div(3, 5), math.div(9, 16), math.div(8, 15), math.div(1, 2), math.div(2, 5), math.div(3, 8), math.div(1, 3), math.div(1, 4)) !default;\n$ct-scales-names: (ct-square, ct-minor-second, ct-major-second, ct-minor-third, ct-major-third, ct-perfect-fourth, ct-perfect-fifth, ct-minor-sixth, ct-golden-section, ct-major-sixth, ct-minor-seventh, ct-major-seventh, ct-octave, ct-major-tenth, ct-major-eleventh, ct-major-twelfth, ct-double-octave) !default;\n\n// Class names to be used when generating CSS\n$ct-class-chart: ct-chart !default;\n$ct-class-chart-line: ct-chart-line !default;\n$ct-class-chart-bar: ct-chart-bar !default;\n$ct-class-horizontal-bars: ct-horizontal-bars !default;\n$ct-class-chart-pie: ct-chart-pie !default;\n$ct-class-chart-donut: ct-chart-donut !default;\n$ct-class-label: ct-label !default;\n$ct-class-series: ct-series !default;\n$ct-class-line: ct-line !default;\n$ct-class-point: ct-point !default;\n$ct-class-area: ct-area !default;\n$ct-class-bar: ct-bar !default;\n$ct-class-slice-pie: ct-slice-pie !default;\n$ct-class-slice-donut: ct-slice-donut !default;\n$ct-class-grid: ct-grid !default;\n$ct-class-grid-background: ct-grid-background !default;\n$ct-class-vertical: ct-vertical !default;\n$ct-class-horizontal: ct-horizontal !default;\n$ct-class-start: ct-start !default;\n$ct-class-end: ct-end !default;\n\n// Container ratio\n$ct-container-ratio: math.div(1, 1.618) !default;\n\n// Text styles for labels\n$ct-text-color: rgba(0, 0, 0, 0.4) !default;\n$ct-text-size: 0.75rem !default;\n$ct-text-align: flex-start !default;\n$ct-text-justify: flex-start !default;\n$ct-text-line-height: 1 !default;\n\n// Grid styles\n$ct-grid-color: rgba(0, 0, 0, 0.2) !default;\n$ct-grid-dasharray: 2px !default;\n$ct-grid-width: 1px !default;\n$ct-grid-background-fill: none !default;\n\n// Line chart properties\n$ct-line-width: 4px !default;\n$ct-line-dasharray: false !default;\n$ct-point-size: 10px !default;\n// Line chart point, can be either round or square\n$ct-point-shape: round !default;\n// Area fill transparency between 0 and 1\n$ct-area-opacity: 0.1 !default;\n\n// Bar chart bar width\n$ct-bar-width: 10px !default;\n\n// Donut width (If donut width is to big it can cause issues where the shape gets distorted)\n$ct-donut-width: 60px !default;\n\n// If set to true it will include the default classes and generate CSS output. If you're planning to use the mixins you\n// should set this property to false\n$ct-include-classes: true !default;\n\n// If this is set to true the CSS will contain colored series. You can extend or change the color with the\n// properties below\n$ct-include-colored-series: $ct-include-classes !default;\n\n// If set to true this will include all responsive container variations using the scales defined at the top of the script\n$ct-include-alternative-responsive-containers: $ct-include-classes !default;\n\n// Series names and colors. This can be extended or customized as desired. Just add more series and colors.\n$ct-series-names: (a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) !default;\n$ct-series-colors: (\n  #d70206,\n  #f05b4f,\n  #f4c63d,\n  #d17905,\n  #453d3f,\n  #59922b,\n  #0544d3,\n  #6b0392,\n  #e6805e,\n  #dda458,\n  #eacf7d,\n  #86797d,\n  #b2c326,\n  #6188e2,\n  #a748ca\n) !default;\n","@use 'chartist/dist/index' as chartist with (\n  $ct-series-colors: (\n    // percentiles\n    #d70206,\n    #e68507,\n    #59922b,\n    // children\n    #0544d3,\n    #d17905,\n    #59922b,\n    #d70206,\n    #6b0392,\n    #f4c63d,\n    #453d3f,\n    #e6805e,\n    #dda458,\n    #eacf7d,\n    #86797d,\n    #b2c326,\n    #6188e2,\n    #a748ca,\n  )\n);\n\n#chart {\n  height: 50vh;\n}\n\n/* Use this selector to override the line style on a given series */\n.ct-series-a .ct-line {\n  /* Set the colour of this series line */\n  //stroke: red;\n  /* Control the thickness of your lines */\n  stroke-width: 1px;\n  /* Create a dashed line with a pattern */\n  stroke-dasharray: 10px 10px;\n}\n\n.ct-series-b .ct-line {\n  //stroke: orange;\n  stroke-width: 1px;\n  stroke-dasharray: 5px 5px;\n}\n\n.ct-series-c .ct-line {\n  //stroke: green;\n  stroke-width: 1px;\n  stroke-dasharray: 10px 10px;\n}\n\n// percentiles\n.ct-series-a .ct-point,\n.ct-series-b .ct-point,\n.ct-series-c .ct-point {\n  display: none;\n}\n\n.ct-legend {\n  margin-top: 1em;\n  position: relative;\n  z-index: 10;\n\n  li {\n    //display: inline flow-root;\n    position: relative;\n    padding-left: 23px;\n    padding-right: 23px;\n    margin-bottom: 3px;\n  }\n\n  li:before {\n    width: 12px;\n    height: 12px;\n    position: absolute;\n    left: 0;\n    content: '';\n    border: 3px solid transparent;\n    border-radius: 2px;\n  }\n\n  li.inactive:before {\n    background: transparent;\n  }\n\n  &.ct-legend-inside {\n    position: absolute;\n    top: 0;\n    right: 0;\n  }\n\n  @for $i from 1 through length(chartist.$ct-series-names) {\n    $n: nth(chartist.$ct-series-names, $i);\n    $c: nth(chartist.$ct-series-colors, $i);\n\n    .ct-series-#{$n}:before {\n      background-color: $c;\n      border-color: $c;\n    }\n  }\n}\n","@import url('https://fonts.googleapis.com/css2?family=Jersey+15&display=swap');\n\nbody {\n  min-width: 350px;\n\n  // background-image: linear-gradient(to bottom,\n  //     #fae0b4 200px,\n  //     white 275px,\n  //     white 100%);\n}\n\nh2 {\n  font-family: 'Jersey 15', sans-serif;\n  font-weight: 400;\n  font-size: 3em;\n  text-transform: uppercase;\n\n  &::before {\n    content: '> ';\n  }\n\n  &::after {\n    content: ' <';\n  }\n}\n\nheader {\n  // flex row layout\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  align-items: center;\n  gap: 20px;\n}\n\n.logo {\n  background-clip: content-box;\n  background-image: url('../assets/logo.png');\n  background-position: left;\n  background-repeat: no-repeat;\n  background-size: contain;\n\n  border-radius: 40px;\n  border-width: 8px;\n  border-top-style: dashed;\n  border-top-width: 3px;\n  border-bottom-style: dashed;\n  border-bottom-width: 3px;\n  border-right-style: solid;\n  border-left-style: solid;\n\n  margin: 5px 5px;\n\n  width: 200px;\n  min-width: 200px;\n  height: 200px;\n\n  &:hover {\n    transform: scale(-1, 1);\n  }\n}\n\n.title-container {\n  // flex column layout\n  display: flex;\n  flex-direction: column;\n}\n\n.title {\n  font-family: 'Jersey 15', sans-serif;\n  font-weight: 400;\n  font-style: bold;\n  font-size: calc(2em + 2 * (100vw - 120px) / 100);\n\n  text-transform: uppercase;\n  text-align: center;\n}\n\n.tagline {\n  text-align: center;\n}\n\nblockquote {\n  p::before {\n    content: '\\201C';\n  }\n\n  p::after {\n    content: '\\201D';\n  }\n}\n\ndetails {\n  border: 1px solid;\n  border-radius: 4px;\n  padding: 0.5em 0.5em 0;\n  margin: 0 0 0.5em;\n  display: none;\n}\n\nsummary {\n  font-weight: bold;\n  margin: -0.5em -0.5em 0;\n  padding: 0.5em;\n}\n\nsummary a {\n  float: right;\n}\n\ndetails[open] {\n  padding: 0.5em;\n}\n\ndetails[open] summary {\n  border-bottom: 1px solid;\n  margin-bottom: 0.5em;\n}\n\nfieldset {\n  margin-bottom: 0.5em;\n}\n\nfieldset ol,\nfieldset ul {\n  margin: 0;\n  padding: 0;\n  list-style: none;\n}\n\nfieldset li {\n  padding-bottom: 0.5em;\n  float: none;\n  clear: left;\n}\n\nli label.main {\n  display: inline-block;\n  min-width: 100px;\n}\n\nli input {\n  display: inline-block;\n  text-align: left;\n}\n\ninput:invalid {\n  border-color: red;\n  border-style: dashed;\n}\n\n.error {\n  display: none;\n  color: red;\n  padding-left: 0.5em;\n}\n\ninput:not(:placeholder-shown):invalid+.error {\n  display: inline-block;\n}\n\na.icon {\n  text-decoration: none;\n}\n\n// Responsive tables\ntable {\n  width: 100%;\n  border-collapse: collapse;\n}\n\n// Zebra striping\ntr:nth-of-type(even) {\n  background: #eee;\n}\n\nth {\n  background: #ddd;\n  font-weight: bold;\n}\n\ntd,\nth {\n  padding: 0.5em;\n  border: 1px solid #ccc;\n  text-align: left;\n}\n\ncaption {\n  display: none;\n}\n\n// Small screens\n@media only screen and (max-width: 820px) {\n\n  // Force table to not display like tables anymore\n  table,\n  thead,\n  tbody,\n  th,\n  tr,\n  td,\n  td::before {\n    display: block;\n  }\n\n  // Hide table headers (but not display: none;, for accessibility)\n  thead tr {\n    position: absolute;\n    top: -9999px;\n    left: -9999px;\n  }\n\n  tr {\n    border: 1px solid #ccc;\n    margin: 1em 0;\n  }\n\n  tr:nth-of-type(even) {\n    background: unset;\n  }\n\n  // First column of the row to display like a header\n  tr td:nth-child(1) {\n    background: #ddd;\n  }\n\n  // Synthetic label displayed instead of table headers\n  td:before {\n    display: inline-block;\n    min-width: 180px;\n    padding-right: 15px;\n    white-space: nowrap;\n    font-weight: bold;\n    content: attr(data-label);\n  }\n}"],"names":[],"sourceRoot":""}