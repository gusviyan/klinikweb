"use strict";
(self.webpackChunkchild_growth_charts = self.webpackChunkchild_growth_charts || []).push([
    [792],
    {
        206: (e, t, s) => {
            var a = s(862),
                o = s.n(a),
                r = s(717),
                n = s(891);
            function i(e) {
                return Array.apply(0, Array(e)).map((e, t) => t);
            }
            function l(e, t = 1) {
                const s = Array(e.length * t).fill(null);
                return (
                    e.forEach((e, a) => {
                        s.splice(a * t, 1, e);
                    }),
                    s
                );
            }
            function c(e, t = 1) {
                return { labels: l(e.labels ?? [], t), series: e.series.map((e) => l(e, t)) };
            }
            const f = {
                    labels: i(14),
                    series: [
                        [2.5, 2.6, 2.8, 3.1, 3.4, 3.6, 3.8, 4.1, 4.3, 4.4, 4.6, 4.8, 4.9, 5.1],
                        [2.9, 3, 3.2, 3.5, 3.8, 4.1, 4.3, 4.5, 4.7, 4.9, 5.1, 5.3, 5.5, 5.6],
                        [3.3, 3.5, 3.8, 4.1, 4.4, 4.7, 4.9, 5.2, 5.4, 5.6, 5.8, 6, 6.2, 6.4],
                        [3.9, 4, 4.3, 4.7, 5, 5.3, 5.6, 5.9, 6.2, 6.4, 6.6, 6.8, 7, 7.2],
                        [4.3, 4.5, 4.9, 5.2, 5.6, 5.9, 6.3, 6.5, 6.8, 7.1, 7.3, 7.5, 7.7, 7.9],
                    ],
                },
                h = {
                    labels: i(60).map((e) => (e % 3 == 0 ? e : "")),
                    series: [
                        [
                            2.5,
                            3.4,
                            4.4,
                            5.1,
                            5.6,
                            6.1,
                            6.4,
                            6.7,
                            7,
                            7.2,
                            7.5,
                            7.7,
                            7.8,
                            8,
                            8.2,
                            8.4,
                            8.5,
                            8.7,
                            8.9,
                            9,
                            9.2,
                            9.3,
                            9.5,
                            9.7,
                            9.8,
                            10,
                            10.1,
                            10.2,
                            10.4,
                            10.5,
                            10.7,
                            10.8,
                            10.9,
                            11.1,
                            11.2,
                            11.3,
                            11.4,
                            11.6,
                            11.7,
                            11.8,
                            11.9,
                            12.1,
                            12.2,
                            12.3,
                            12.4,
                            12.5,
                            12.7,
                            12.8,
                            12.9,
                            13,
                            13.1,
                            13.3,
                            13.4,
                            13.5,
                            13.6,
                            13.7,
                            13.8,
                            13.9,
                            14.1,
                            14.2,
                            14.3,
                        ],
                        [
                            2.9,
                            3.9,
                            4.9,
                            5.6,
                            6.2,
                            6.7,
                            7.1,
                            7.4,
                            7.7,
                            7.9,
                            8.2,
                            8.4,
                            8.6,
                            8.8,
                            9,
                            9.2,
                            9.4,
                            9.6,
                            9.7,
                            9.9,
                            10.1,
                            10.3,
                            10.5,
                            10.6,
                            10.8,
                            11,
                            11.1,
                            11.3,
                            11.5,
                            11.6,
                            11.8,
                            11.9,
                            12.1,
                            12.2,
                            12.4,
                            12.5,
                            12.7,
                            12.8,
                            12.9,
                            13.1,
                            13.2,
                            13.4,
                            13.5,
                            13.6,
                            13.8,
                            13.9,
                            14.1,
                            14.2,
                            14.3,
                            14.5,
                            14.6,
                            14.7,
                            14.9,
                            15,
                            15.2,
                            15.3,
                            15.4,
                            15.6,
                            15.7,
                            15.8,
                            16,
                        ],
                        [
                            3.3,
                            4.5,
                            5.6,
                            6.4,
                            7,
                            7.5,
                            7.9,
                            8.3,
                            8.6,
                            8.9,
                            9.2,
                            9.4,
                            9.6,
                            9.9,
                            10.1,
                            10.3,
                            10.5,
                            10.7,
                            10.9,
                            11.1,
                            11.3,
                            11.5,
                            11.8,
                            12,
                            12.2,
                            12.4,
                            12.5,
                            12.7,
                            12.9,
                            13.1,
                            13.3,
                            13.5,
                            13.7,
                            13.8,
                            14,
                            14.2,
                            14.3,
                            14.5,
                            14.7,
                            14.8,
                            15,
                            15.2,
                            15.3,
                            15.5,
                            15.7,
                            15.8,
                            16,
                            16.2,
                            16.3,
                            16.5,
                            16.7,
                            16.8,
                            17,
                            17.2,
                            17.3,
                            17.5,
                            17.7,
                            17.8,
                            18,
                            18.2,
                            18.3,
                        ],
                        [
                            3.9,
                            5.1,
                            6.3,
                            7.2,
                            7.9,
                            8.4,
                            8.9,
                            9.3,
                            9.6,
                            10,
                            10.3,
                            10.5,
                            10.8,
                            11.1,
                            11.3,
                            11.6,
                            11.8,
                            12,
                            12.3,
                            12.5,
                            12.7,
                            13,
                            13.2,
                            13.4,
                            13.7,
                            13.9,
                            14.1,
                            14.4,
                            14.6,
                            14.8,
                            15,
                            15.2,
                            15.5,
                            15.7,
                            15.9,
                            16.1,
                            16.3,
                            16.5,
                            16.7,
                            16.9,
                            17.1,
                            17.3,
                            17.5,
                            17.7,
                            17.9,
                            18.1,
                            18.3,
                            18.5,
                            18.7,
                            18.9,
                            19.1,
                            19.3,
                            19.5,
                            19.7,
                            19.9,
                            20.1,
                            20.3,
                            20.5,
                            20.7,
                            20.9,
                            21.1,
                        ],
                        [
                            4.3,
                            5.7,
                            7,
                            7.9,
                            8.6,
                            9.2,
                            9.7,
                            10.2,
                            10.5,
                            10.9,
                            11.2,
                            11.5,
                            11.8,
                            12.1,
                            12.4,
                            12.7,
                            12.9,
                            13.2,
                            13.5,
                            13.7,
                            14,
                            14.3,
                            14.5,
                            14.8,
                            15.1,
                            15.3,
                            15.6,
                            15.9,
                            16.1,
                            16.4,
                            16.6,
                            16.9,
                            17.1,
                            17.3,
                            17.6,
                            17.8,
                            18,
                            18.3,
                            18.5,
                            18.7,
                            19,
                            19.2,
                            19.4,
                            19.7,
                            19.9,
                            20.1,
                            20.4,
                            20.6,
                            20.9,
                            21.1,
                            21.3,
                            21.6,
                            21.8,
                            22.1,
                            22.3,
                            22.5,
                            22.8,
                            23,
                            23.3,
                            23.5,
                            23.8,
                        ],
                    ],
                },
                d = {
                    labels: i(14),
                    series: [
                        [2.4, 2.5, 2.7, 2.9, 3.1, 3.3, 3.5, 3.7, 3.9, 4.1, 4.2, 4.3, 4.5, 4.6],
                        [2.8, 2.9, 3.1, 3.3, 3.5, 3.8, 4, 4.2, 4.4, 4.5, 4.7, 4.8, 5, 5.1],
                        [3.2, 3.3, 3.6, 3.8, 4.1, 4.3, 4.6, 4.8, 5, 5.2, 5.4, 5.5, 5.7, 5.8],
                        [3.7, 3.9, 4.1, 4.4, 4.7, 5, 5.3, 5.5, 5.7, 5.9, 6.1, 6.3, 6.5, 6.7],
                        [4.2, 4.4, 4.6, 5, 5.3, 5.6, 5.9, 6.1, 6.4, 6.6, 6.8, 7, 7.2, 7.4],
                    ],
                },
                m = {
                    labels: i(60).map((e) => (e % 3 == 0 ? e : "")),
                    series: [
                        [
                            2.4,
                            3.2,
                            4,
                            4.6,
                            5.1,
                            5.5,
                            5.8,
                            6.1,
                            6.3,
                            6.6,
                            6.8,
                            7,
                            7.1,
                            7.3,
                            7.5,
                            7.7,
                            7.8,
                            8,
                            8.2,
                            8.3,
                            8.5,
                            8.7,
                            8.8,
                            9,
                            9.2,
                            9.3,
                            9.5,
                            9.6,
                            9.8,
                            10,
                            10.1,
                            10.3,
                            10.4,
                            10.5,
                            10.7,
                            10.8,
                            11,
                            11.1,
                            11.2,
                            11.4,
                            11.5,
                            11.6,
                            11.8,
                            11.9,
                            12,
                            12.1,
                            12.3,
                            12.4,
                            12.5,
                            12.6,
                            12.8,
                            12.9,
                            13,
                            13.1,
                            13.2,
                            13.4,
                            13.5,
                            13.6,
                            13.7,
                            13.8,
                            14,
                        ],
                        [
                            2.8,
                            3.6,
                            4.5,
                            5.1,
                            5.6,
                            6.1,
                            6.4,
                            6.7,
                            7,
                            7.3,
                            7.5,
                            7.7,
                            7.9,
                            8.1,
                            8.3,
                            8.5,
                            8.7,
                            8.8,
                            9,
                            9.2,
                            9.4,
                            9.6,
                            9.8,
                            9.9,
                            10.1,
                            10.3,
                            10.5,
                            10.7,
                            10.8,
                            11,
                            11.2,
                            11.3,
                            11.5,
                            11.7,
                            11.8,
                            12,
                            12.1,
                            12.3,
                            12.5,
                            12.6,
                            12.8,
                            12.9,
                            13.1,
                            13.2,
                            13.4,
                            13.5,
                            13.7,
                            13.8,
                            14,
                            14.1,
                            14.3,
                            14.4,
                            14.5,
                            14.7,
                            14.8,
                            15,
                            15.1,
                            15.3,
                            15.4,
                            15.5,
                            15.7,
                        ],
                        [
                            3.2,
                            4.2,
                            5.1,
                            5.8,
                            6.4,
                            6.9,
                            7.3,
                            7.6,
                            7.9,
                            8.2,
                            8.5,
                            8.7,
                            8.9,
                            9.2,
                            9.4,
                            9.6,
                            9.8,
                            10,
                            10.2,
                            10.4,
                            10.6,
                            10.9,
                            11.1,
                            11.3,
                            11.5,
                            11.7,
                            11.9,
                            12.1,
                            12.3,
                            12.5,
                            12.7,
                            12.9,
                            13.1,
                            13.3,
                            13.5,
                            13.7,
                            13.9,
                            14,
                            14.2,
                            14.4,
                            14.6,
                            14.8,
                            15,
                            15.2,
                            15.3,
                            15.5,
                            15.7,
                            15.9,
                            16.1,
                            16.3,
                            16.4,
                            16.6,
                            16.8,
                            17,
                            17.2,
                            17.3,
                            17.5,
                            17.7,
                            17.9,
                            18,
                            18.2,
                        ],
                        [
                            3.7,
                            4.8,
                            5.9,
                            6.7,
                            7.3,
                            7.8,
                            8.3,
                            8.7,
                            9,
                            9.3,
                            9.6,
                            9.9,
                            10.2,
                            10.4,
                            10.7,
                            10.9,
                            11.2,
                            11.4,
                            11.6,
                            11.9,
                            12.1,
                            12.4,
                            12.6,
                            12.8,
                            13.1,
                            13.3,
                            13.6,
                            13.8,
                            14,
                            14.3,
                            14.5,
                            14.7,
                            15,
                            15.2,
                            15.4,
                            15.7,
                            15.9,
                            16.1,
                            16.3,
                            16.6,
                            16.8,
                            17,
                            17.3,
                            17.5,
                            17.7,
                            17.9,
                            18.2,
                            18.4,
                            18.6,
                            18.9,
                            19.1,
                            19.3,
                            19.5,
                            19.8,
                            20,
                            20.2,
                            20.4,
                            20.7,
                            20.9,
                            21.1,
                            21.3,
                        ],
                        [
                            4.2,
                            5.4,
                            6.5,
                            7.4,
                            8.1,
                            8.7,
                            9.2,
                            9.6,
                            10,
                            10.4,
                            10.7,
                            11,
                            11.3,
                            11.6,
                            11.9,
                            12.2,
                            12.5,
                            12.7,
                            13,
                            13.3,
                            13.5,
                            13.8,
                            14.1,
                            14.3,
                            14.6,
                            14.9,
                            15.2,
                            15.4,
                            15.7,
                            16,
                            16.2,
                            16.5,
                            16.8,
                            17,
                            17.3,
                            17.6,
                            17.8,
                            18.1,
                            18.4,
                            18.6,
                            18.9,
                            19.2,
                            19.5,
                            19.7,
                            20,
                            20.3,
                            20.6,
                            20.8,
                            21.1,
                            21.4,
                            21.7,
                            22,
                            22.2,
                            22.5,
                            22.8,
                            23.1,
                            23.3,
                            23.6,
                            23.9,
                            24.2,
                            24.4,
                        ],
                    ],
                },
                u = {
                    labels: i(14),
                    series: [
                        [46.3, 47.5, 48.8, 49.8, 50.7, 51.7, 52.5, 53.4, 54.1, 54.9, 55.6, 56.3, 56.9, 57.6],
                        [47.9, 49.1, 50.4, 51.4, 52.4, 53.3, 54.2, 55, 55.8, 56.6, 57.3, 58, 58.7, 59.3],
                        [49.9, 51.1, 52.3, 53.4, 54.4, 55.3, 56.2, 57.1, 57.9, 58.7, 59.4, 60.1, 60.8, 61.4],
                        [51.8, 53.1, 54.3, 55.4, 56.4, 57.4, 58.3, 59.1, 60, 60.7, 61.5, 62.2, 62.9, 63.5],
                        [53.4, 54.7, 55.9, 57, 58, 59, 59.9, 60.8, 61.6, 62.4, 63.2, 63.9, 64.6, 65.2],
                    ],
                },
                g = {
                    labels: i(25).map((e) => (e % 3 == 0 ? e : "")),
                    series: [
                        [46.3, 51.1, 54.7, 57.6, 60, 61.9, 63.6, 65.1, 66.5, 67.7, 69, 70.2, 71.3, 72.4, 73.4, 74.4, 75.4, 76.3, 77.2, 78.1, 78.9, 79.7, 80.5, 81.3, 82.1],
                        [47.9, 52.7, 56.4, 59.3, 61.7, 63.7, 65.4, 66.9, 68.3, 69.6, 70.9, 72.1, 73.3, 74.4, 75.5, 76.5, 77.5, 78.5, 79.5, 80.4, 81.3, 82.2, 83, 83.8, 84.6],
                        [49.9, 54.7, 58.4, 61.4, 63.9, 65.9, 67.6, 69.2, 70.6, 72, 73.3, 74.5, 75.7, 76.9, 78, 79.1, 80.2, 81.2, 82.3, 83.2, 84.2, 85.1, 86, 86.9, 87.8],
                        [51.8, 56.7, 60.5, 63.5, 66, 68.1, 69.8, 71.4, 72.9, 74.3, 75.6, 77, 78.2, 79.4, 80.6, 81.8, 82.9, 84, 85.1, 86.1, 87.1, 88.1, 89.1, 90, 91],
                        [53.4, 58.4, 62.2, 65.3, 67.8, 69.9, 71.6, 73.2, 74.7, 76.2, 77.6, 78.9, 80.2, 81.5, 82.7, 83.9, 85.1, 86.2, 87.3, 88.4, 89.5, 90.5, 91.6, 92.6, 93.6],
                    ],
                },
                p = {
                    labels: i(37).map((e) => (e % 3 == 0 ? e + 24 : "")),
                    series: [
                        [
                            81.4,
                            82.1,
                            82.8,
                            83.5,
                            84.2,
                            84.9,
                            85.5,
                            86.2,
                            86.8,
                            87.4,
                            88,
                            88.5,
                            89.1,
                            89.7,
                            90.2,
                            90.8,
                            91.3,
                            91.9,
                            92.4,
                            92.9,
                            93.4,
                            93.9,
                            94.4,
                            94.9,
                            95.4,
                            95.9,
                            96.4,
                            96.9,
                            97.4,
                            97.9,
                            98.4,
                            98.8,
                            99.3,
                            99.8,
                            100.3,
                            100.8,
                            101.2,
                        ],
                        [
                            83.9,
                            84.7,
                            85.5,
                            86.3,
                            87,
                            87.7,
                            88.4,
                            89.1,
                            89.7,
                            90.4,
                            91,
                            91.6,
                            92.2,
                            92.8,
                            93.4,
                            94,
                            94.6,
                            95.2,
                            95.7,
                            96.3,
                            96.8,
                            97.4,
                            97.9,
                            98.5,
                            99,
                            99.5,
                            100,
                            100.5,
                            101.1,
                            101.6,
                            102.1,
                            102.6,
                            103.1,
                            103.6,
                            104.1,
                            104.7,
                            105.2,
                        ],
                        [
                            87.1,
                            88,
                            88.8,
                            89.6,
                            90.4,
                            91.2,
                            91.9,
                            92.7,
                            93.4,
                            94.1,
                            94.8,
                            95.4,
                            96.1,
                            96.7,
                            97.4,
                            98,
                            98.6,
                            99.2,
                            99.9,
                            100.4,
                            101,
                            101.6,
                            102.2,
                            102.8,
                            103.3,
                            103.9,
                            104.4,
                            105,
                            105.6,
                            106.1,
                            106.7,
                            107.2,
                            107.8,
                            108.3,
                            108.9,
                            109.4,
                            110,
                        ],
                        [
                            90.3,
                            91.2,
                            92.1,
                            93,
                            93.8,
                            94.7,
                            95.5,
                            96.2,
                            97,
                            97.8,
                            98.5,
                            99.2,
                            99.9,
                            100.6,
                            101.3,
                            102,
                            102.7,
                            103.3,
                            104,
                            104.6,
                            105.2,
                            105.8,
                            106.5,
                            107.1,
                            107.7,
                            108.3,
                            108.9,
                            109.5,
                            110.1,
                            110.7,
                            111.2,
                            111.8,
                            112.4,
                            113,
                            113.6,
                            114.2,
                            114.8,
                        ],
                        [
                            92.9,
                            93.8,
                            94.8,
                            95.7,
                            96.6,
                            97.5,
                            98.3,
                            99.2,
                            100,
                            100.8,
                            101.5,
                            102.3,
                            103.1,
                            103.8,
                            104.5,
                            105.2,
                            105.9,
                            106.6,
                            107.3,
                            108,
                            108.6,
                            109.3,
                            109.9,
                            110.6,
                            111.2,
                            111.8,
                            112.5,
                            113.1,
                            113.7,
                            114.3,
                            115,
                            115.6,
                            116.2,
                            116.8,
                            117.4,
                            118.1,
                            118.7,
                        ],
                    ],
                },
                b = {
                    labels: i(14),
                    series: [
                        [45.6, 46.8, 47.9, 48.8, 49.7, 50.5, 51.3, 52.1, 52.8, 53.4, 54.1, 54.7, 55.3, 55.8],
                        [47.2, 48.4, 49.5, 50.5, 51.4, 52.2, 53, 53.8, 54.5, 55.2, 55.8, 56.4, 57, 57.6],
                        [49.1, 50.3, 51.5, 52.5, 53.4, 54.2, 55.1, 55.8, 56.6, 57.3, 57.9, 58.6, 59.2, 59.8],
                        [51.1, 52.3, 53.5, 54.5, 55.4, 56.3, 57.1, 57.9, 58.7, 59.4, 60.1, 60.7, 61.4, 62],
                        [52.7, 53.9, 55.1, 56.1, 57, 57.9, 58.8, 59.6, 60.4, 61.1, 61.8, 62.5, 63.1, 63.7],
                    ],
                },
                w = {
                    labels: i(25).map((e) => (e % 3 == 0 ? e : "")),
                    series: [
                        [45.6, 50, 53.2, 55.8, 58, 59.9, 61.5, 62.9, 64.3, 65.6, 66.8, 68, 69.2, 70.3, 71.3, 72.4, 73.3, 74.3, 75.2, 76.2, 77, 77.9, 78.7, 79.6, 80.3],
                        [47.2, 51.7, 55, 57.6, 59.8, 61.7, 63.4, 64.9, 66.3, 67.6, 68.9, 70.2, 71.3, 72.5, 73.6, 74.7, 75.7, 76.7, 77.7, 78.7, 79.6, 80.5, 81.4, 82.2, 83.1],
                        [49.1, 53.7, 57.1, 59.8, 62.1, 64, 65.7, 67.3, 68.7, 70.1, 71.5, 72.8, 74, 75.2, 76.4, 77.5, 78.6, 79.7, 80.7, 81.7, 82.7, 83.7, 84.6, 85.5, 86.4],
                        [51.1, 55.7, 59.2, 62, 64.3, 66.3, 68.1, 69.7, 71.2, 72.6, 74, 75.4, 76.7, 77.9, 79.2, 80.3, 81.5, 82.6, 83.7, 84.8, 85.8, 86.8, 87.8, 88.8, 89.8],
                        [52.7, 57.4, 60.9, 63.8, 66.2, 68.2, 70, 71.6, 73.2, 74.7, 76.1, 77.5, 78.9, 80.2, 81.4, 82.7, 83.9, 85, 86.2, 87.3, 88.4, 89.4, 90.5, 91.5, 92.5],
                    ],
                },
                y = {
                    labels: i(37).map((e) => (e % 3 == 0 ? e + 24 : "")),
                    series: [
                        [79.6, 80.4, 81.2, 81.9, 82.6, 83.4, 84, 84.7, 85.4, 86, 86.7, 87.3, 87.9, 88.5, 89.1, 89.7, 90.3, 90.8, 91.4, 92, 92.5, 93, 93.6, 94.1, 94.6, 95.1, 95.7, 96.2, 96.7, 97.2, 97.6, 98.1, 98.6, 99.1, 99.6, 100, 100.5],
                        [82.4, 83.2, 84, 84.8, 85.5, 86.3, 87, 87.7, 88.4, 89.1, 89.8, 90.5, 91.1, 91.7, 92.4, 93, 93.6, 94.2, 94.8, 95.4, 96, 96.6, 97.2, 97.7, 98.3, 98.8, 99.4, 99.9, 100.4, 101, 101.5, 102, 102.5, 103, 103.5, 104, 104.5],
                        [
                            85.7,
                            86.6,
                            87.4,
                            88.3,
                            89.1,
                            89.9,
                            90.7,
                            91.4,
                            92.2,
                            92.9,
                            93.6,
                            94.4,
                            95.1,
                            95.7,
                            96.4,
                            97.1,
                            97.7,
                            98.4,
                            99,
                            99.7,
                            100.3,
                            100.9,
                            101.5,
                            102.1,
                            102.7,
                            103.3,
                            103.9,
                            104.5,
                            105,
                            105.6,
                            106.2,
                            106.7,
                            107.3,
                            107.8,
                            108.4,
                            108.9,
                            109.4,
                        ],
                        [
                            89.1,
                            90,
                            90.9,
                            91.8,
                            92.7,
                            93.5,
                            94.3,
                            95.2,
                            95.9,
                            96.7,
                            97.5,
                            98.3,
                            99,
                            99.7,
                            100.5,
                            101.2,
                            101.9,
                            102.6,
                            103.3,
                            103.9,
                            104.6,
                            105.3,
                            105.9,
                            106.6,
                            107.2,
                            107.8,
                            108.4,
                            109.1,
                            109.7,
                            110.3,
                            110.9,
                            111.5,
                            112.1,
                            112.6,
                            113.2,
                            113.8,
                            114.4,
                        ],
                        [
                            91.8,
                            92.8,
                            93.7,
                            94.6,
                            95.6,
                            96.4,
                            97.3,
                            98.2,
                            99,
                            99.8,
                            100.6,
                            101.4,
                            102.2,
                            103,
                            103.7,
                            104.5,
                            105.2,
                            106,
                            106.7,
                            107.4,
                            108.1,
                            108.8,
                            109.5,
                            110.2,
                            110.8,
                            111.5,
                            112.1,
                            112.8,
                            113.4,
                            114.1,
                            114.7,
                            115.3,
                            116,
                            116.6,
                            117.2,
                            117.8,
                            118.4,
                        ],
                    ],
                },
                S = {
                    labels: i(14),
                    series: [
                        [32.1, 32.9, 33.7, 34.3, 34.9, 35.4, 35.9, 36.3, 36.7, 37, 37.4, 37.7, 38, 38.3],
                        [33.1, 33.9, 34.7, 35.3, 35.9, 36.4, 36.8, 37.3, 37.7, 38, 38.4, 38.7, 39, 39.3],
                        [34.5, 35.2, 35.9, 36.5, 37.1, 37.6, 38.1, 38.5, 38.9, 39.2, 39.6, 39.9, 40.2, 40.5],
                        [35.8, 36.4, 37.1, 37.7, 38.3, 38.8, 39.3, 39.7, 40.1, 40.5, 40.8, 41.1, 41.4, 41.7],
                        [36.9, 37.5, 38.1, 38.7, 39.3, 39.8, 40.3, 40.7, 41.1, 41.4, 41.8, 42.1, 42.4, 42.7],
                    ],
                },
                O = {
                    labels: i(14),
                    series: [
                        [31.7, 32.4, 33.1, 33.7, 34.2, 34.6, 35, 35.4, 35.7, 36.1, 36.4, 36.7, 36.9, 37.2],
                        [32.7, 33.3, 34, 34.6, 35.2, 35.6, 36, 36.4, 36.8, 37.1, 37.4, 37.7, 38, 38.2],
                        [33.9, 34.6, 35.2, 35.8, 36.4, 36.8, 37.3, 37.7, 38, 38.4, 38.7, 39, 39.3, 39.5],
                        [35.1, 35.8, 36.4, 37, 37.6, 38.1, 38.5, 38.9, 39.3, 39.6, 39.9, 40.2, 40.5, 40.8],
                        [36.1, 36.7, 37.4, 38, 38.6, 39.1, 39.5, 39.9, 40.3, 40.6, 41, 41.3, 41.6, 41.9],
                    ],
                },
                k = {
                    labels: i(60).map((e) => (e % 3 == 0 ? e : "")),
                    series: [
                        [
                            32.1,
                            35.1,
                            36.9,
                            38.3,
                            39.4,
                            40.3,
                            41,
                            41.7,
                            42.2,
                            42.6,
                            43,
                            43.4,
                            43.6,
                            43.9,
                            44.1,
                            44.3,
                            44.5,
                            44.7,
                            44.9,
                            45,
                            45.2,
                            45.3,
                            45.4,
                            45.6,
                            45.7,
                            45.8,
                            45.9,
                            46,
                            46.1,
                            46.2,
                            46.3,
                            46.4,
                            46.5,
                            46.6,
                            46.6,
                            46.7,
                            46.8,
                            46.9,
                            46.9,
                            47,
                            47,
                            47.1,
                            47.2,
                            47.2,
                            47.3,
                            47.3,
                            47.4,
                            47.4,
                            47.5,
                            47.5,
                            47.5,
                            47.6,
                            47.6,
                            47.7,
                            47.7,
                            47.7,
                            47.8,
                            47.8,
                            47.9,
                            47.9,
                            47.9,
                        ],
                        [
                            33.1,
                            36.1,
                            37.9,
                            39.3,
                            40.4,
                            41.3,
                            42.1,
                            42.7,
                            43.2,
                            43.7,
                            44.1,
                            44.4,
                            44.7,
                            45,
                            45.2,
                            45.5,
                            45.6,
                            45.8,
                            46,
                            46.2,
                            46.3,
                            46.4,
                            46.6,
                            46.7,
                            46.8,
                            47,
                            47.1,
                            47.2,
                            47.3,
                            47.4,
                            47.5,
                            47.6,
                            47.7,
                            47.8,
                            47.8,
                            47.9,
                            48,
                            48.1,
                            48.1,
                            48.2,
                            48.3,
                            48.3,
                            48.4,
                            48.4,
                            48.5,
                            48.5,
                            48.6,
                            48.6,
                            48.7,
                            48.7,
                            48.8,
                            48.8,
                            48.9,
                            48.9,
                            49,
                            49,
                            49,
                            49.1,
                            49.1,
                            49.2,
                            49.2,
                        ],
                        [
                            34.5,
                            37.3,
                            39.1,
                            40.5,
                            41.6,
                            42.6,
                            43.3,
                            44,
                            44.5,
                            45,
                            45.4,
                            45.8,
                            46.1,
                            46.3,
                            46.6,
                            46.8,
                            47,
                            47.2,
                            47.4,
                            47.5,
                            47.7,
                            47.8,
                            48,
                            48.1,
                            48.3,
                            48.4,
                            48.5,
                            48.6,
                            48.7,
                            48.8,
                            48.9,
                            49,
                            49.1,
                            49.2,
                            49.3,
                            49.4,
                            49.5,
                            49.5,
                            49.6,
                            49.7,
                            49.7,
                            49.8,
                            49.9,
                            49.9,
                            50,
                            50.1,
                            50.1,
                            50.2,
                            50.2,
                            50.3,
                            50.3,
                            50.4,
                            50.4,
                            50.4,
                            50.5,
                            50.5,
                            50.6,
                            50.6,
                            50.7,
                            50.7,
                            50.7,
                        ],
                        [
                            35.8,
                            38.5,
                            40.3,
                            41.7,
                            42.9,
                            43.8,
                            44.6,
                            45.3,
                            45.8,
                            46.3,
                            46.7,
                            47.1,
                            47.4,
                            47.7,
                            47.9,
                            48.2,
                            48.4,
                            48.6,
                            48.7,
                            48.9,
                            49.1,
                            49.2,
                            49.4,
                            49.5,
                            49.7,
                            49.8,
                            49.9,
                            50,
                            50.2,
                            50.3,
                            50.4,
                            50.5,
                            50.6,
                            50.7,
                            50.8,
                            50.8,
                            50.9,
                            51,
                            51.1,
                            51.2,
                            51.2,
                            51.3,
                            51.4,
                            51.4,
                            51.5,
                            51.6,
                            51.6,
                            51.7,
                            51.7,
                            51.8,
                            51.8,
                            51.9,
                            51.9,
                            52,
                            52,
                            52.1,
                            52.1,
                            52.2,
                            52.2,
                            52.2,
                            52.3,
                        ],
                        [
                            36.9,
                            39.5,
                            41.3,
                            42.7,
                            43.9,
                            44.8,
                            45.6,
                            46.3,
                            46.9,
                            47.4,
                            47.8,
                            48.2,
                            48.5,
                            48.8,
                            49,
                            49.3,
                            49.5,
                            49.7,
                            49.9,
                            50,
                            50.2,
                            50.4,
                            50.5,
                            50.7,
                            50.8,
                            50.9,
                            51.1,
                            51.2,
                            51.3,
                            51.4,
                            51.6,
                            51.7,
                            51.8,
                            51.9,
                            52,
                            52,
                            52.1,
                            52.2,
                            52.3,
                            52.4,
                            52.4,
                            52.5,
                            52.6,
                            52.7,
                            52.7,
                            52.8,
                            52.8,
                            52.9,
                            53,
                            53,
                            53.1,
                            53.1,
                            53.2,
                            53.2,
                            53.3,
                            53.3,
                            53.4,
                            53.4,
                            53.5,
                            53.5,
                            53.5,
                        ],
                    ],
                },
                B = {
                    labels: i(60).map((e) => (e % 3 == 0 ? e : "")),
                    series: [
                        [
                            31.7,
                            34.3,
                            36,
                            37.2,
                            38.2,
                            39,
                            39.7,
                            40.4,
                            40.9,
                            41.3,
                            41.7,
                            42,
                            42.3,
                            42.6,
                            42.9,
                            43.1,
                            43.3,
                            43.5,
                            43.6,
                            43.8,
                            44,
                            44.1,
                            44.3,
                            44.4,
                            44.6,
                            44.7,
                            44.8,
                            44.9,
                            45.1,
                            45.2,
                            45.3,
                            45.4,
                            45.5,
                            45.6,
                            45.7,
                            45.8,
                            45.9,
                            45.9,
                            46,
                            46.1,
                            46.2,
                            46.2,
                            46.3,
                            46.4,
                            46.4,
                            46.5,
                            46.5,
                            46.6,
                            46.7,
                            46.7,
                            46.8,
                            46.8,
                            46.9,
                            46.9,
                            47,
                            47,
                            47.1,
                            47.1,
                            47.2,
                            47.2,
                            47.2,
                        ],
                        [
                            32.7,
                            35.3,
                            37,
                            38.2,
                            39.3,
                            40.1,
                            40.8,
                            41.5,
                            42,
                            42.4,
                            42.8,
                            43.2,
                            43.5,
                            43.8,
                            44,
                            44.2,
                            44.4,
                            44.6,
                            44.8,
                            45,
                            45.1,
                            45.3,
                            45.4,
                            45.6,
                            45.7,
                            45.9,
                            46,
                            46.1,
                            46.3,
                            46.4,
                            46.5,
                            46.6,
                            46.7,
                            46.8,
                            46.9,
                            47,
                            47,
                            47.1,
                            47.2,
                            47.3,
                            47.4,
                            47.4,
                            47.5,
                            47.6,
                            47.6,
                            47.7,
                            47.7,
                            47.8,
                            47.9,
                            47.9,
                            48,
                            48,
                            48.1,
                            48.1,
                            48.2,
                            48.2,
                            48.3,
                            48.3,
                            48.4,
                            48.4,
                            48.4,
                        ],
                        [
                            33.9,
                            36.5,
                            38.3,
                            39.5,
                            40.6,
                            41.5,
                            42.2,
                            42.8,
                            43.4,
                            43.8,
                            44.2,
                            44.6,
                            44.9,
                            45.2,
                            45.4,
                            45.7,
                            45.9,
                            46.1,
                            46.2,
                            46.4,
                            46.6,
                            46.7,
                            46.9,
                            47,
                            47.2,
                            47.3,
                            47.5,
                            47.6,
                            47.7,
                            47.8,
                            47.9,
                            48,
                            48.1,
                            48.2,
                            48.3,
                            48.4,
                            48.5,
                            48.6,
                            48.7,
                            48.7,
                            48.8,
                            48.9,
                            49,
                            49,
                            49.1,
                            49.2,
                            49.2,
                            49.3,
                            49.3,
                            49.4,
                            49.4,
                            49.5,
                            49.5,
                            49.6,
                            49.6,
                            49.7,
                            49.7,
                            49.8,
                            49.8,
                            49.9,
                            49.9,
                        ],
                        [
                            35.1,
                            37.8,
                            39.5,
                            40.8,
                            41.9,
                            42.8,
                            43.5,
                            44.2,
                            44.7,
                            45.2,
                            45.6,
                            46,
                            46.3,
                            46.6,
                            46.8,
                            47.1,
                            47.3,
                            47.5,
                            47.7,
                            47.8,
                            48,
                            48.2,
                            48.3,
                            48.5,
                            48.6,
                            48.8,
                            48.9,
                            49,
                            49.2,
                            49.3,
                            49.4,
                            49.5,
                            49.6,
                            49.7,
                            49.8,
                            49.9,
                            50,
                            50.1,
                            50.1,
                            50.2,
                            50.3,
                            50.4,
                            50.4,
                            50.5,
                            50.6,
                            50.6,
                            50.7,
                            50.7,
                            50.8,
                            50.9,
                            50.9,
                            51,
                            51,
                            51.1,
                            51.1,
                            51.2,
                            51.2,
                            51.3,
                            51.3,
                            51.4,
                            51.4,
                        ],
                        [
                            36.1,
                            38.8,
                            40.5,
                            41.9,
                            43,
                            43.9,
                            44.6,
                            45.3,
                            45.9,
                            46.3,
                            46.8,
                            47.1,
                            47.5,
                            47.7,
                            48,
                            48.2,
                            48.5,
                            48.7,
                            48.8,
                            49,
                            49.2,
                            49.4,
                            49.5,
                            49.7,
                            49.8,
                            49.9,
                            50.1,
                            50.2,
                            50.3,
                            50.5,
                            50.6,
                            50.7,
                            50.8,
                            50.9,
                            51,
                            51.1,
                            51.2,
                            51.3,
                            51.3,
                            51.4,
                            51.5,
                            51.6,
                            51.6,
                            51.7,
                            51.8,
                            51.8,
                            51.9,
                            51.9,
                            52,
                            52.1,
                            52.1,
                            52.2,
                            52.2,
                            52.3,
                            52.3,
                            52.4,
                            52.4,
                            52.5,
                            52.5,
                            52.6,
                            52.6,
                        ],
                    ],
                };
            function v(e, t) {
                return { lineSmooth: r.lc.none({ fillHoles: !0 }), showPoint: !0, axisX: { labelInterpolationFnc: (t) => (t ? `${t} ${e}` : null) }, axisY: { labelInterpolationFnc: (e) => (e ? `${e} ${t}` : null) }, plugins: [] };
            }
            const x = {
                    "who-wfa-boys-13-weeks": { label: "Boys: Weight-for-age: Birth to 13 weeks", data: c(f, 7), options: v(n.es.WEEKS.toString(), "kg"), timeUnit: n.es.DAYS, offset: n.aA.ZERO, sex: "male", accessorFn: (e) => e.weight },
                    "who-wfa-girls-13-weeks": { label: "Girls: Weight-for-age: Birth to 13 weeks", data: c(d, 7), options: v(n.es.WEEKS.toString(), "kg"), timeUnit: n.es.DAYS, offset: n.aA.ZERO, sex: "female", accessorFn: (e) => e.weight },
                    "who-wfa-boys-5-years": { label: "Boys: Weight-for-age: Birth to 5 years", data: h, options: v(n.es.MONTHS.toString(), "kg"), timeUnit: n.es.MONTHS, offset: n.aA.ZERO, sex: "male", accessorFn: (e) => e.weight },
                    "who-wfa-girls-5-years": { label: "Girls: Weight-for-age: Birth to 5 years", data: m, options: v(n.es.MONTHS.toString(), "kg"), timeUnit: n.es.MONTHS, offset: n.aA.ZERO, sex: "female", accessorFn: (e) => e.weight },
                    "who-hfa-boys-13-weeks": { label: "Boys: Length-for-age: Birth to 13 weeks", data: c(u, 7), options: v(n.es.WEEKS.toString(), "cm"), timeUnit: n.es.DAYS, offset: n.aA.ZERO, sex: "male", accessorFn: (e) => e.length },
                    "who-hfa-girls-13-weeks": { label: "Girls: Length-for-age: Birth to 13 weeks", data: c(b, 7), options: v(n.es.WEEKS.toString(), "cm"), timeUnit: n.es.DAYS, offset: n.aA.ZERO, sex: "female", accessorFn: (e) => e.length },
                    "who-hfa-boys-2-years": { label: "Boys: Length-for-age: Birth to 2 years", data: g, options: v(n.es.MONTHS.toString(), "cm"), timeUnit: n.es.MONTHS, offset: n.aA.ZERO, sex: "male", accessorFn: (e) => e.length },
                    "who-hfa-girls-2-years": { label: "Girls: Length-for-age: Birth to 2 years", data: w, options: v(n.es.MONTHS.toString(), "cm"), timeUnit: n.es.MONTHS, offset: n.aA.ZERO, sex: "female", accessorFn: (e) => e.length },
                    "who-hfa-boys-5-years": { label: "Boys: Length-for-age: 2 to 5 years", data: p, options: v(n.es.MONTHS.toString(), "cm"), timeUnit: n.es.MONTHS, offset: n.aA.ofYears(2), sex: "male", accessorFn: (e) => e.length },
                    "who-hfa-girls-5-years": { label: "Girls: Length-for-age: 2 to 5 years", data: y, options: v(n.es.MONTHS.toString(), "cm"), timeUnit: n.es.MONTHS, offset: n.aA.ofYears(2), sex: "female", accessorFn: (e) => e.length },
                    "who-hcfa-boys-13-weeks": {
                        label: "Boys: Head circumference for age: Birth to 13 weeks",
                        data: c(S, 7),
                        options: v(n.es.WEEKS.toString(), "cm"),
                        timeUnit: n.es.DAYS,
                        offset: n.aA.ZERO,
                        sex: "male",
                        accessorFn: (e) => e.head,
                    },
                    "who-hcfa-girls-13-weeks": {
                        label: "Girls: Head circumference for age: Birth to 13 weeks",
                        data: c(O, 7),
                        options: v(n.es.WEEKS.toString(), "cm"),
                        timeUnit: n.es.DAYS,
                        offset: n.aA.ZERO,
                        sex: "female",
                        accessorFn: (e) => e.head,
                    },
                    "who-hcfa-boys-5-years": {
                        label: "Boys: Head circumference for age: Birth to 5 years",
                        data: k,
                        options: v(n.es.MONTHS.toString(), "cm"),
                        timeUnit: n.es.MONTHS,
                        offset: n.aA.ZERO,
                        sex: "male",
                        accessorFn: (e) => e.head,
                    },
                    "who-hcfa-girls-5-years": {
                        label: "Girls: Head circumference for age: Birth to 5 years",
                        data: B,
                        options: v(n.es.MONTHS.toString(), "cm"),
                        timeUnit: n.es.MONTHS,
                        offset: n.aA.ZERO,
                        sex: "female",
                        accessorFn: (e) => e.head,
                    },
                },
                A = {
                    oninit({ attrs: { state: e, actions: t } }) {
                        t.loadChart(e.name);
                    },
                    view: ({ attrs: { state: e, actions: t } }) =>
                        o()(
                            "fieldset",
                            o()("legend", "Child Growth Standard"),
                            o()(
                                "ul",
                                o()(
                                    "li",
                                    o()(
                                        "select",
                                        { id: "chart-select", onchange: (e) => t.loadChart(e.currentTarget.value), value: e.name },
                                        Object.entries(x).map(([e, t]) => o()("option", { value: e }, t.label))
                                    )
                                )
                            )
                        ),
                };
            function E() {
                let e, t;
                function s(e) {
                    const s = e.config?.data ?? { labels: [], series: [] },
                        a = [0, 1, 2, 1],
                        o = s.series.map((e, t) => ({ name: `percentile-${t}`, className: `ct-series-${String.fromCharCode(97 + a[t % 4])}`, data: e }));
                    t = { labels: s.labels, series: [...o, ...e.data] };
                }
                return {
                    oninit({ attrs: e }) {
                        s(e);
                    },
                    oncreate({ dom: s, attrs: a }) {
                        const n = s.querySelector("#chart");
                        (e = new r.bl(n, t, a.config?.options)), o().redraw();
                    },
                    onupdate({ attrs: a }) {
                        s(a), e?.update(t, a.config?.options);
                    },
                    view: ({ attrs: e }) =>
                        o()(
                            "fieldset",
                            o()("legend", e.config?.label),
                            o()("div", { id: "chart" }),
                            o()(
                                "ul",
                                { class: "ct-legend" },
                                o()("li", { class: "ct-series-a" }, "3th & 97th percentile"),
                                o()("li", { class: "ct-series-b" }, "15th & 85th percentile"),
                                o()("li", { class: "ct-series-c" }, "50th percentile")
                            )
                        ),
                };
            }
            const H = "growth-data",
                N = ["#0544d3", "#d17905", "#59922b", "#d70206", "#6b0392", "#f4c63d", "#453d3f", "#e6805e", "#dda458", "#eacf7d", "#86797d", "#b2c326", "#6188e2", "#a748ca"],
                M = () => ({ idx: 0, open: !0, name: null, dateOfBirth: void 0, sex: null, colourHex: N[0], measurements: [] }),
                F = (e, t) => ({
                    update: (e, s, a) => {
                        (t.name = e), (t.dateOfBirth = s), (t.sex = a), t.measurements.forEach((e) => (e.dateOfBirth = s));
                    },
                    pickColour: (e) => {
                        t.colourHex = e;
                    },
                    addMeasurement: (e = T(t)) => {
                        t.measurements.push(e), t.measurements.sort((e, t) => e.date.compareTo(t.date));
                    },
                    removeMeasurement: (e) => {
                        t.measurements.splice(e, 1);
                    },
                    remove: () => {
                        e.removeChild(t.idx);
                    },
                }),
                T = (e) => ({ idx: -1, date: e.measurements.at(-1)?.date.plusDays(1) ?? e.dateOfBirth ?? n.yc.now(), weight: void 0, length: void 0, head: void 0, dateOfBirth: e.dateOfBirth }),
                $ = new Intl.ListFormat("en", { style: "long", type: "conjunction" }),
                U = new Intl.PluralRules("en"),
                C = new Map([
                    ["one", ""],
                    ["other", "s"],
                ]),
                R = (e, t) => {
                    const s = U.select(t);
                    return `${e}${C.get(s)}`;
                },
                D = {
                    oncreate({ dom: e }) {
                        e.querySelector("input")?.focus();
                    },
                    view({ attrs: { state: e, actions: t } }) {
                        const s = n.yc.now(),
                            a = e.name ?? "Unnamed",
                            r = e.dateOfBirth ? n.aA.between(e.dateOfBirth, s) : null,
                            i = `${a}${
                                r
                                    ? `, ${((e) => {
                                          const t = [],
                                              s = e.years(),
                                              a = e.months(),
                                              o = e.days();
                                          if (e.isNegative()) return "🥚";
                                          if (e.isZero()) return "🐣";
                                          if (e.years() >= 66e6 && e.years() <= 727e5) return "🦖";
                                          if (e.years() >= 45e8) return "🌌";
                                          s > 0 && t.push(`${s} ${R("year", s)}`), a > 0 && s < 20 && t.push(`${a} ${R("month", a)}`), o > 0 && s < 1 && a < 3 && t.push(`${o} ${R("day", o)}`);
                                          const r = $.format(t);
                                          return 0 === e.months() && 0 === e.days() ? r + " 🎈" : r;
                                      })(r)} old`
                                    : ""
                            }`;
                        return o()(
                            "details",
                            {
                                open: e.open,
                                name: "children",
                                ontoggle: (t) => {
                                    e.open = "close" === t.newState;
                                },
                            },
                            o()(
                                "summary",
                                i,
                                o()(
                                    "a",
                                    {
                                        href: "#",
                                        class: "icon",
                                        onclick: (s) => {
                                            s.preventDefault(), ((e.dateOfBirth || e.measurements.length || e.name || e.sex) && !confirm(`Delete all data for '${a}'?`)) || t.remove();
                                        },
                                    },
                                    "✖"
                                )
                            )
                        );
                    },
                },
                W = D,
                Z = (e, t) => ("dateOfBirth" === e || "date" === e ? n.yc.parse(t) : t);
            function Y(e) {
                return JSON.stringify(e);
            }
            function I(e) {
                return JSON.parse(e, Z);
            }
            function L(e, t, s, a, o) {
                let r;
                switch (s) {
                    case n.es.DAYS:
                        r = n.aA.ofDays(1);
                        break;
                    case n.es.WEEKS:
                        r = n.aA.ofWeeks(1);
                        break;
                    case n.es.MONTHS:
                        r = n.aA.ofMonths(1);
                        break;
                    default:
                        throw "Unsupported timeunit: " + s;
                }
                const i = { idx: -1, date: e },
                    l = t.filter((t) => !t.date.isBefore(e)),
                    c = Array(a).fill(null),
                    f = (function (e = [], t, s = n.aA.ofWeeks(1)) {
                        const a = [];
                        if (0 === e.length) return { buckets: a };
                        const o = [...e].sort((e, s) => t(e).compareTo(t(s))),
                            r = t(o[0]);
                        a.push({ key: r, values: [o[0]] });
                        for (const e of o.slice(1)) {
                            const o = t(e);
                            let r = a[a.length - 1],
                                n = r.key.plus(s);
                            for (; !o.isBefore(n); ) (r = { key: n, values: [] }), (n = n.plus(s)), a.push(r);
                            r.values.push(e);
                        }
                        return { buckets: a };
                    })([i, ...l], (e) => e.date, r),
                    h = (function (e, t, s = Math.min) {
                        const a = [];
                        for (const o of e.buckets) {
                            const e = s(...o.values.map(t).filter((e) => !!e));
                            a.push({ key: o.key, value: e });
                        }
                        return { buckets: a };
                    })(f, o);
                for (const [e, t] of h.buckets.entries()) {
                    if (e >= a) break;
                    const s = Number.isFinite(t.value) ? t.value : null;
                    c.splice(e, 1, s);
                }
                return c;
            }
            const G = {
                    oninit({ attrs: { actions: e } }) {
                        const t = localStorage.getItem(H);
                        if (null !== t) {
                            const s = I(t);
                            e.import(s);
                        }
                    },
                    onupdate({ attrs: { state: e } }) {
                        localStorage.setItem(H, Y(e.children));
                    },
                    view({ attrs: { state: e, actions: t } }) {
                        const s = e.children.map((e, s) => ((e.idx = s), (e.colourHex = N[s % N.length]), o()(W, { state: e, actions: F(t, e) })));
                        if (e.chart.config) {
                            const { data: t, offset: s, timeUnit: a, sex: o, accessorFn: r } = e.chart.config,
                                n = t.labels?.length ?? 0,
                                i = e.children
                                    .filter((e) => e.dateOfBirth)
                                    .filter((e) => null == e.sex || e.sex === o)
                                    .map((e) => ({ name: `child-${e.idx}`, className: `ct-series-${String.fromCharCode(97 + e.idx + 3)}`, data: L(e.dateOfBirth.plus(s), e.measurements, a, n, r) }));
                            e.chart.data = i;
                        }
                        return [
                            s,
                            o()(A, {
                                state: e.chart,
                                actions:
                                    ((a = e.chart),
                                    {
                                        loadChart: (e) => {
                                            const t = x[e];
                                            t && ((a.name = e), (a.config = t)), console.log("Loaded chart: ", e);
                                        },
                                    }),
                            }),
                            o()(E, e.chart),
                            o()(K, { state: e, actions: t }),
                        ];
                        var a;
                    },
                },
                K = {
                    view: ({ attrs: { state: e, actions: t } }) => (
                        (function (e) {
                            const t = Y(e);
                            btoa(encodeURIComponent(t).replace(/%([0-9A-F]{2})/g, (e, t) => String.fromCharCode(parseInt(t, 16))));
                        })(e.children),
                        o()(
                            "fieldset",
                            o()("legend", "Data management"),
                            o()(
                                "ul",
                                o()(
                                    "li",
                                    o()("label", { for: "import", class: "main" }, "Import data"),
                                    o()(
                                        "button",
                                        {
                                            onclick: () => {
                                                fetch("http://veda.loc/fenton.json")
                                                    .then((e) => e.json())
                                                    .then((e) => {
                                                        const s = I(JSON.stringify(e));
                                                        t.import(s), console.log(e);
                                                    })
                                                    .catch((e) => console.error("Error loading JSON file", e));
                                            },
                                        },
                                        "Load Data"
                                    )
                                )
                            )
                        )
                    ),
                },
                j = G,
                J = { children: [M()], chart: { name: "who-wfa-boys-13-weeks", config: void 0, data: [] } },
                _ = ((e) => ({
                    addChild: (t = M()) => {
                        t.open && e.children.forEach((e) => (e.open = !1)), e.children.push(t);
                    },
                    removeChild: (t) => {
                        e.children.splice(t, 1);
                    },
                    import: (t) => {
                        e.children = t;
                    },
                }))(J);
            o().mount(fenton_container, { view: () => o()(j, { state: J, actions: _ }) });
        },
    },
    (e) => {
        e.O(0, [96], () => (206, e((e.s = 206)))), e.O();
    },
]);
//# sourceMappingURL=main.js.map
