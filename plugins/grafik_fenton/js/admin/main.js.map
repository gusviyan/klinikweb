{"version":3,"file":"main.78e325cef18257859e36.js","mappings":"gKAeA,SAASA,EAASC,GAChB,OAAOC,MAAMC,MAAM,EAAGD,MAAMD,IAAQG,KAAI,CAACC,EAAYC,IAC5CA,GAEX,CAEA,SAASC,EAAQC,EAAiBC,EAAS,GACzC,MAAMC,EAAIR,MAAMM,EAAKG,OAASF,GAAQG,KAAK,MAI3C,OAHAJ,EAAKK,SAAQ,CAACC,EAAGC,KACfL,EAAEM,OAAOD,EAAMN,EAAQ,EAAGK,EAAE,IAEvBJ,CACT,CAEA,SAASO,EAAaC,EAAsBT,EAAS,GACnD,MAAO,CACLU,OAAQZ,EAAQW,EAAMC,QAAU,GAAIV,GACpCW,OAAQF,EAAME,OAAOhB,KAAIiB,GAAKd,EAAQc,EAAaZ,KAEvD,CAoBA,MAAMa,EAAmC,CAEvCH,OAAQnB,EAAS,IAEjBoB,OAAQ,CAEN,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAElE,CAAC,IAAK,EAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAElE,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,EAAK,IAAK,KAElE,CAAC,IAAK,EAAK,IAAK,IAAK,EAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,EAAK,KAElE,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,OAIhEG,EAAkC,CACtCJ,OAAQnB,EAAS,IAAII,KAAIoB,GAAUA,EAAQ,GAAM,EAAIA,EAAQ,KAC7DJ,OAAQ,CACN,CACE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,EAAG,IAAK,IAAK,IAAK,IAAK,EAAG,IAClE,IAAK,IAAK,IAAK,IAAK,EAAG,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,KAAM,KAAM,KAChE,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAClE,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,GAAI,KAAM,KAAM,KAChE,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MAE5C,CACE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,EACtE,IAAK,IAAK,IAAK,IAAK,IAAK,KAAM,KAAM,KAAM,KAAM,KAAM,GAAI,KAAM,KACjE,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAClE,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAClE,KAAM,GAAI,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,IAEhD,CACE,IAAK,IAAK,IAAK,IAAK,EAAG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KACpE,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,GAAI,KAAM,KAAM,KAChE,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,GAAI,KAAM,KAAM,KAAM,KAChE,KAAM,GAAI,KAAM,KAAM,KAAM,KAAM,KAAM,GAAI,KAAM,KAAM,KAAM,KAAM,KACpE,GAAI,KAAM,KAAM,KAAM,KAAM,KAAM,GAAI,KAAM,MAE9C,CACE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,KAAM,KAAM,KAAM,KACnE,KAAM,KAAM,KAAM,GAAI,KAAM,KAAM,KAAM,GAAI,KAAM,KAAM,KAAM,KAAM,KACpE,KAAM,KAAM,KAAM,GAAI,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAChE,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAClE,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MAExD,CACE,IAAK,IAAK,EAAG,IAAK,IAAK,IAAK,IAAK,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KACrE,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,GAAI,KAAM,KAAM,KAAM,KAAM,KAChE,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,GAAI,KAChE,KAAM,KAAM,GAAI,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAChE,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,GAAI,KAAM,KAAM,QAK1DK,EAAoC,CACxCN,OAAQnB,EAAS,IACjBoB,OAAQ,CAEN,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAElE,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,EAAK,IAAK,IAAK,IAAK,IAAK,IAAK,EAAK,KAElE,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,EAAK,IAAK,IAAK,IAAK,IAAK,KAElE,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,EAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAElE,CAAC,IAAK,IAAK,IAAK,EAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,EAAK,IAAK,OAIhEM,EAAmC,CACvCP,OAAQnB,EAAS,IAAII,KAAIoB,GAAUA,EAAQ,GAAM,EAAIA,EAAQ,KAC7DJ,OAAQ,CACN,CACE,IAAK,IAAK,EAAG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,EAAG,IAAK,IAAK,IAClE,IAAK,IAAK,EAAG,IAAK,IAAK,IAAK,IAAK,IAAK,EAAG,IAAK,IAAK,IAAK,IAAK,IAAK,GAClE,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,GAAI,KAAM,KAAM,KAAM,KAAM,KAChE,KAAM,KAAM,GAAI,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,GAAI,KAAM,KACpE,KAAM,KAAM,KAAM,KAAM,KAAM,IAEhC,CACE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,EAAG,IAAK,IAAK,IAAK,IAAK,IAAK,IACpE,IAAK,IAAK,IAAK,EAAG,IAAK,IAAK,IAAK,IAAK,IAAK,KAAM,KAAM,KAAM,KAAM,KACnE,GAAI,KAAM,KAAM,KAAM,KAAM,KAAM,GAAI,KAAM,KAAM,KAAM,KAAM,KAAM,KACpE,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,GAAI,KAAM,KAAM,KAAM,KAAM,KAChE,KAAM,GAAI,KAAM,KAAM,KAAM,KAAM,MAEpC,CACE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACtE,IAAK,IAAK,GAAI,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KACpE,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,GAAI,KAAM,KAChE,KAAM,KAAM,GAAI,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAChE,KAAM,GAAI,KAAM,KAAM,KAAM,KAAM,KAAM,GAAI,MAE9C,CACE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,EAAG,IAAK,IAAK,IAAK,KAAM,KAChE,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAClE,KAAM,KAAM,GAAI,KAAM,KAAM,KAAM,GAAI,KAAM,KAAM,KAAM,KAAM,KAAM,KACpE,KAAM,KAAM,GAAI,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAChE,KAAM,KAAM,KAAM,GAAI,KAAM,KAAM,KAAM,KAAM,KAAM,MAEtD,CACE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,KAAM,KAAM,GAAI,KAAM,KAClE,KAAM,KAAM,KAAM,KAAM,GAAI,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAChE,KAAM,KAAM,KAAM,GAAI,KAAM,KAAM,KAAM,GAAI,KAAM,KAAM,KAAM,KAAM,KACpE,KAAM,KAAM,KAAM,KAAM,KAAM,GAAI,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,GACtE,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,QAKhDO,EAAmC,CACvCR,OAAQnB,EAAS,IACjBoB,OAAQ,CACN,CACE,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAClE,KAAM,MAER,CACE,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,GAAM,KAAM,KAAM,KAAM,GAClE,KAAM,MAER,CACE,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAClE,KAAM,MAER,CACE,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,GAAM,KAAM,KAAM,KAClE,KAAM,MAER,CACE,KAAM,KAAM,KAAM,GAAM,GAAM,GAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAClE,KAAM,QAKNQ,EAAkC,CACtCT,OAAQnB,EAAS,IAAII,KAAIoB,GAAUA,EAAQ,GAAM,EAAIA,EAAQ,KAC7DJ,OAAQ,CACN,CACE,KAAM,KAAM,KAAM,KAAM,GAAI,KAAM,KAAM,KAAM,KAAM,KAAM,GAAI,KAAM,KACpE,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MAEpE,CACE,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAClE,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,GAAI,KAChE,MAEF,CACE,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,GAAI,KAAM,KAChE,KAAM,KAAM,GAAI,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,GAAI,KAAM,MAEtE,CACE,KAAM,KAAM,KAAM,KAAM,GAAI,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,GAAI,KACpE,KAAM,KAAM,KAAM,KAAM,GAAI,KAAM,KAAM,KAAM,KAAM,KAAM,GAAI,IAEhE,CACE,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAClE,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAClE,QAKAS,EAAkC,CACtCV,OAAQnB,EAAS,IAAII,KAAIoB,GAAUA,EAAQ,GAAM,EAAIA,EAAQ,GAAK,KAClEJ,OAAQ,CACN,CACE,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,GAAI,KAChE,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAClE,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MAAO,MACnE,OAEF,CACE,KAAM,KAAM,KAAM,KAAM,GAAI,KAAM,KAAM,KAAM,KAAM,KAAM,GAAI,KAAM,KACpE,KAAM,KAAM,GAAI,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,GAAI,KACpE,IAAK,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,OAEtE,CACE,KAAM,GAAI,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAChE,KAAM,KAAM,KAAM,GAAI,KAAM,KAAM,KAAM,MAAO,IAAK,MAAO,MAAO,MAClE,MAAO,MAAO,MAAO,IAAK,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MACpE,MAAO,KAET,CACE,KAAM,KAAM,KAAM,GAAI,KAAM,KAAM,KAAM,KAAM,GAAI,KAAM,KAAM,KAAM,KACpE,MAAO,MAAO,IAAK,MAAO,MAAO,IAAK,MAAO,MAAO,MAAO,MAAO,MAClE,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,IAAK,MACpE,MAAO,OAET,CACE,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,IAAK,MAAO,MAAO,MACnE,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,IAAK,MAAO,MAAO,MACpE,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,IAAK,MAAO,MAAO,MACpE,MAAO,MAAO,SAKdU,EAAoC,CACxCX,OAAQnB,EAAS,IACjBoB,OAAQ,CACN,CACE,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAClE,KAAM,MAER,CACE,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,GAAI,KAAM,KAAM,KAAM,KAAM,KAAM,GACtE,MAEF,CACE,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAClE,KAAM,MAER,CACE,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAClE,KAAM,IAER,CACE,KAAM,KAAM,KAAM,KAAM,GAAI,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAChE,KAAM,QAKNW,EAAmC,CACvCZ,OAAQnB,EAAS,IAAII,KAAIoB,GAAUA,EAAQ,GAAM,EAAIA,EAAQ,KAC7DJ,OAAQ,CACN,CACE,KAAM,GAAI,KAAM,KAAM,GAAI,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,GAAI,KAClE,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,GAAI,KAAM,KAAM,KAAM,MAElE,CACE,KAAM,KAAM,GAAI,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAChE,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAClE,MAEF,CACE,KAAM,KAAM,KAAM,KAAM,KAAM,GAAI,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,GACtE,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MAEpE,CACE,KAAM,KAAM,KAAM,GAAI,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,GAAI,KAAM,KACpE,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MAEpE,CACE,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,GAAI,KAAM,KAAM,KAAM,KAAM,KAChE,KAAM,KAAM,KAAM,KAAM,KAAM,GAAI,KAAM,KAAM,KAAM,KAAM,KAAM,KAChE,QAKAY,EAAmC,CACvCb,OAAQnB,EAAS,IAAII,KAAIoB,GAAUA,EAAQ,GAAM,EAAIA,EAAQ,GAAK,KAClEJ,OAAQ,CACN,CACE,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,GAAI,KAAM,KAAM,GAAI,KAAM,KAAM,KACpE,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,GAAI,KAAM,GAAI,KAAM,KAAM,KAAM,KACpE,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,IAAK,OAE7D,CACE,KAAM,KAAM,GAAI,KAAM,KAAM,KAAM,GAAI,KAAM,KAAM,KAAM,KAAM,KAAM,KACpE,KAAM,KAAM,GAAI,KAAM,KAAM,KAAM,KAAM,GAAI,KAAM,KAAM,KAAM,KAAM,KACpE,KAAM,KAAM,MAAO,IAAK,MAAO,IAAK,MAAO,IAAK,MAAO,IAAK,OAE9D,CACE,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAClE,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,GAAI,KAAM,MAAO,MAAO,MAAO,MACnE,MAAO,MAAO,MAAO,MAAO,IAAK,MAAO,MAAO,MAAO,MAAO,MAAO,MACpE,MAAO,OAET,CACE,KAAM,GAAI,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,GACtE,KAAM,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAC9D,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAC/D,MAAO,MAAO,MAAO,OAEvB,CACE,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,GAAI,KAAM,MAAO,MACjE,MAAO,IAAK,MAAO,MAAO,MAAO,IAAK,MAAO,MAAO,MAAO,MAAO,MAClE,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,IAAK,MACpE,MAAO,MAAO,SAKda,EAAoC,CACxCd,OAAQnB,EAAS,IACjBoB,OAAQ,CACN,CACE,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,GAAI,KAAM,KAAM,GACtE,MAEF,CACE,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,GAAI,KAAM,KAAM,GACtE,MAEF,CACE,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAClE,KAAM,MAER,CACE,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAClE,KAAM,MAER,CACE,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAClE,KAAM,QAKNc,EAAqC,CACzCf,OAAQnB,EAAS,IACjBoB,OAAQ,CACN,CACE,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,GAAI,KAAM,KAAM,KAAM,KAAM,KAChE,KAAM,MAER,CACE,KAAM,KAAM,GAAI,KAAM,KAAM,KAAM,GAAI,KAAM,KAAM,KAAM,KAAM,KAAM,GACpE,MAEF,CACE,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,GAAI,KAAM,KAAM,GAAI,KACpE,MAEF,CACE,KAAM,KAAM,KAAM,GAAI,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAChE,KAAM,MAER,CACE,KAAM,KAAM,KAAM,GAAI,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,GAAI,KAAM,KACpE,QAKAe,EAAmC,CACvChB,OAAQnB,EAAS,IAAII,KAAIoB,GAAUA,EAAQ,GAAM,EAAIA,EAAQ,KAC7DJ,OAAQ,CACN,CACE,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,GAAI,KAAM,KAAM,KAAM,GAAI,KAAM,KACpE,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,GAAI,KAAM,KAAM,KAAM,KAAM,KAChE,KAAM,KAAM,GAAI,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAChE,KAAM,KAAM,GAAI,GAAI,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KACpE,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MAE9D,CACE,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAClE,KAAM,GAAI,KAAM,KAAM,KAAM,KAAM,GAAI,KAAM,KAAM,KAAM,KAAM,KAAM,KACpE,GAAI,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,GAAI,KACpE,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAClE,KAAM,KAAM,KAAM,KAAM,GAAI,GAAI,GAAI,KAAM,KAAM,KAAM,MAExD,CACE,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,GAAI,KAAM,GAAI,KAAM,KAAM,KACpE,KAAM,KAAM,KAAM,GAAI,KAAM,KAAM,KAAM,KAAM,KAAM,GAAI,KAAM,KAAM,KACpE,KAAM,KAAM,KAAM,KAAM,KAAM,GAAI,KAAM,KAAM,KAAM,KAAM,KAAM,KAChE,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,GAAI,KAAM,KAAM,KAAM,KAAM,KAChE,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MAE9D,CACE,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAClE,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAClE,KAAM,KAAM,KAAM,GAAI,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAChE,KAAM,GAAI,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAChE,KAAM,KAAM,KAAM,KAAM,KAAM,GAAI,GAAI,KAAM,KAAM,KAAM,KAAM,KAAM,MAEtE,CACE,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAClE,KAAM,KAAM,GAAI,KAAM,KAAM,KAAM,KAAM,GAAI,KAAM,KAAM,KAAM,KAAM,KACpE,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,GAAI,GAAI,KAAM,KACpE,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,GAAI,GAAI,KACpE,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,QAKtDgB,EAAoC,CACxCjB,OAAQnB,EAAS,IAAII,KAAIoB,GAAUA,EAAQ,GAAM,EAAIA,EAAQ,KAC7DJ,OAAQ,CACN,CACE,KAAM,KAAM,GAAI,KAAM,KAAM,GAAI,KAAM,KAAM,KAAM,KAAM,KAAM,GAAI,KAClE,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,GAAI,KAAM,KAAM,KAAM,KAChE,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAClE,KAAM,GAAI,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAChE,KAAM,KAAM,KAAM,KAAM,KAAM,GAAI,GAAI,KAAM,KAAM,KAAM,KAAM,MAEhE,CACE,KAAM,KAAM,GAAI,KAAM,KAAM,KAAM,KAAM,KAAM,GAAI,KAAM,KAAM,KAAM,KACpE,KAAM,GAAI,KAAM,KAAM,KAAM,KAAM,GAAI,KAAM,KAAM,KAAM,KAAM,KAAM,KACpE,GAAI,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,GAAI,GAAI,KAAM,KAClE,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,GAAI,GACtE,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MAElD,CACE,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAClE,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,GAClE,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,GAAI,KAAM,KAAM,KAAM,KAChE,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,GAAI,GAAI,KAAM,KAAM,KAAM,KAAM,KACpE,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MAEpE,CACE,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,GAClE,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,GAAI,KAAM,KAAM,KAChE,KAAM,KAAM,KAAM,GAAI,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,GACtE,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAClE,KAAM,KAAM,GAAI,GAAI,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MAEhE,CACE,KAAM,KAAM,KAAM,KAAM,GAAI,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAChE,KAAM,KAAM,GAAI,KAAM,KAAM,KAAM,KAAM,GAAI,KAAM,KAAM,KAAM,KAAM,KACpE,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,GAAI,KAAM,KAChE,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,GAClE,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,QAKxE,SAASiB,EAAQC,EAAmBC,GAClC,MAAO,CACLC,WAAY,KAAcC,KAAK,CAACC,WAAW,IAC3CC,WAAW,EACXC,MAAO,CACLC,sBAAuBC,GAAQA,EAAM,GAAGA,KAAOR,IAAc,MAE/DS,MAAO,CACLF,sBAAuBC,GAAQA,EAAM,GAAGA,KAAOP,IAAc,MAE/DS,QAAS,GAEb,CAwBA,MAiIA,EAjIkC,CAChC,wBAAyB,CACvBC,MAAO,0CACPzC,KAAMS,EAAaK,EAAmB,GACtCe,QAASA,EAAQ,KAAWa,MAAMC,WAAY,MAC9CC,SAAU,KAAWC,KACrBC,OAAQ,KAAOC,KACfC,IAAK,OACLC,WAAYC,GAAKA,EAAEC,QAErB,yBAA0B,CACxBV,MAAO,2CACPzC,KAAMS,EAAaQ,EAAoB,GACvCY,QAASA,EAAQ,KAAWa,MAAMC,WAAY,MAC9CC,SAAU,KAAWC,KACrBC,OAAQ,KAAOC,KACfC,IAAK,SACLC,WAAYC,GAAKA,EAAEC,QAErB,uBAAwB,CACtBV,MAAO,yCACPzC,KAAMe,EACNc,QAASA,EAAQ,KAAWuB,OAAOT,WAAY,MAC/CC,SAAU,KAAWQ,OACrBN,OAAQ,KAAOC,KACfC,IAAK,OACLC,WAAYC,GAAKA,EAAEC,QAErB,wBAAyB,CACvBV,MAAO,0CACPzC,KAAMkB,EACNW,QAASA,EAAQ,KAAWuB,OAAOT,WAAY,MAC/CC,SAAU,KAAWQ,OACrBN,OAAQ,KAAOC,KACfC,IAAK,SACLC,WAAYC,GAAKA,EAAEC,QAErB,wBAAyB,CACvBV,MAAO,0CACPzC,KAAMS,EAAaU,EAAmB,GACtCU,QAASA,EAAQ,KAAWa,MAAMC,WAAY,MAC9CC,SAAU,KAAWC,KACrBC,OAAQ,KAAOC,KACfC,IAAK,OACLC,WAAYC,GAAKA,EAAE/C,QAErB,yBAA0B,CACxBsC,MAAO,2CACPzC,KAAMS,EAAaa,EAAoB,GACvCO,QAASA,EAAQ,KAAWa,MAAMC,WAAY,MAC9CC,SAAU,KAAWC,KACrBC,OAAQ,KAAOC,KACfC,IAAK,SACLC,WAAYC,GAAKA,EAAE/C,QAErB,uBAAwB,CACtBsC,MAAO,yCACPzC,KAAMoB,EACNS,QAASA,EAAQ,KAAWuB,OAAOT,WAAY,MAC/CC,SAAU,KAAWQ,OACrBN,OAAQ,KAAOC,KACfC,IAAK,OACLC,WAAYC,GAAKA,EAAE/C,QAErB,wBAAyB,CACvBsC,MAAO,0CACPzC,KAAMuB,EACNM,QAASA,EAAQ,KAAWuB,OAAOT,WAAY,MAC/CC,SAAU,KAAWQ,OACrBN,OAAQ,KAAOC,KACfC,IAAK,SACLC,WAAYC,GAAKA,EAAE/C,QAErB,uBAAwB,CACtBsC,MAAO,qCACPzC,KAAMqB,EACNQ,QAASA,EAAQ,KAAWuB,OAAOT,WAAY,MAC/CC,SAAU,KAAWQ,OACrBN,OAAQ,KAAOO,QAAQ,GACvBL,IAAK,OACLC,WAAYC,GAAKA,EAAE/C,QAErB,wBAAyB,CACvBsC,MAAO,sCACPzC,KAAMwB,EACNK,QAASA,EAAQ,KAAWuB,OAAOT,WAAY,MAC/CC,SAAU,KAAWQ,OACrBN,OAAQ,KAAOO,QAAQ,GACvBL,IAAK,SACLC,WAAYC,GAAKA,EAAE/C,QAErB,yBAA0B,CACxBsC,MAAO,sDACPzC,KAAMS,EAAagB,EAAoB,GACvCI,QAASA,EAAQ,KAAWa,MAAMC,WAAY,MAC9CC,SAAU,KAAWC,KACrBC,OAAQ,KAAOC,KACfC,IAAK,OACLC,WAAYC,GAAKA,EAAEI,MAErB,0BAA2B,CACzBb,MAAO,uDACPzC,KAAMS,EAAaiB,EAAqB,GACxCG,QAASA,EAAQ,KAAWa,MAAMC,WAAY,MAC9CC,SAAU,KAAWC,KACrBC,OAAQ,KAAOC,KACfC,IAAK,SACLC,WAAYC,GAAKA,EAAEI,MAErB,wBAAyB,CACvBb,MAAO,qDACPzC,KAAM2B,EACNE,QAASA,EAAQ,KAAWuB,OAAOT,WAAY,MAC/CC,SAAU,KAAWQ,OACrBN,OAAQ,KAAOC,KACfC,IAAK,OACLC,WAAYC,GAAKA,EAAEI,MAErB,yBAA0B,CACxBb,MAAO,sDACPzC,KAAM4B,EACNC,QAASA,EAAQ,KAAWuB,OAAOT,WAAY,MAC/CC,SAAU,KAAWQ,OACrBN,OAAQ,KAAOC,KACfC,IAAK,SACLC,WAAYC,GAAKA,EAAEI,OC5nBjBC,EAAyE,CAC7E,MAAAC,EAAQC,OAAO,MAACC,EAAK,QAAEC,KACrBA,EAAQC,UAAUF,EAAMG,KAC1B,EACAC,KAAI,EAAEL,OAAO,MAACC,EAAK,QAAEC,MACZ,IACL,WACA,IAAE,SAAU,yBACZ,IACE,KACA,IACE,KACA,IACE,SACA,CACEI,GAAI,eACJC,SAAWC,GACTN,EAAQC,UAAWK,EAAEC,cAAoCC,OAC3DA,MAAOT,EAAMG,MAEfO,OAAOC,QAAQ,GAAQzE,KAAI,EAAEiE,EAAMS,KACjC,IAAE,SAAU,CAACH,MAAON,GAAOS,EAAM7B,cAS/C,SAAS8B,IACP,IAAID,EACAtE,EAEJ,SAASwE,EAAWf,GAClB,MAAMgB,EAAWhB,EAAMiB,QAAQ1E,MAAQ,CACrCW,OAAQ,GACRC,OAAQ,IAKJ+D,EAAyB,CAAC,EAAG,EAAG,EAAG,GACnCC,EAA+BH,EAAS7D,OAAOhB,KAAI,CAACiB,EAAGf,KAAM,CACjE+D,KAAM,cAAc/D,IACpB+E,UAAW,aAAaC,OAAOC,aAC7B,GAAKJ,EAAuB7E,EAAI,MAElCE,KAAMa,MAIRb,EAAO,CACLW,OAAQ8D,EAAS9D,OACjBC,OAAQ,IAAIgE,KAASnB,EAAMzD,MAE/B,CAEA,MAAO,CACL,MAAAwD,EAAO,MAACC,IAENe,EAAWf,EACb,EACA,QAAAuB,EAAS,IAACC,EAAG,MAAExB,IACb,MAAMyB,EAAeD,EAAIE,cAAc,UACvCb,EAAQ,IAAI,KAAUY,EAAclF,EAAMyD,EAAMiB,QAAQ7C,SACxD,YACF,EACA,QAAAuD,EAAS,MAAC3B,IACRe,EAAWf,GACXa,GAAOe,OAAOrF,EAAMyD,EAAMiB,QAAQ7C,QACpC,EACAiC,KAAI,EAAC,MAACL,KACG,IACL,WACA,IAAE,SAAUA,EAAMiB,QAAQjC,OAC1B,IAAE,MAAO,CAACsB,GAAI,UACd,IACE,KACA,CAACuB,MAAO,aACR,IAAE,KAAM,CAACA,MAAO,eAAgB,yBAChC,IAAE,KAAM,CAACA,MAAO,eAAgB,0BAChC,IAAE,KAAM,CAACA,MAAO,eAAgB,qBAK1C,CC7FO,MAAMC,EAAoB,cAGpBC,EAAU,CACrB,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,WCoDIC,EAAa,KAAa,CAC9BlF,IAAK,EACLmF,MAAM,EACN7B,KAAM,KACN8B,iBAAaC,EACb5C,IAAK,KACL6C,UAAWL,EAAQ,GACnBM,aAAc,KAGVC,EAAe,CAACC,EAAkBC,KAAgC,CACtEZ,OAAQ,CAACxB,EAAc8B,EAAwB3C,KAC7CiD,EAAMpC,KAAOA,EACboC,EAAMN,YAAcA,EACpBM,EAAMjD,IAAMA,EACZiD,EAAMH,aAAazF,SAAQ6C,GAAMA,EAAEyC,YAAcA,GAAa,EAEhEO,WAAaC,IACXF,EAAMJ,UAAYM,CAAG,EAEvBC,eAAgB,CAACC,EAA2BC,EAAiBL,MAC3DA,EAAMH,aAAaS,KAAKF,GACxBJ,EAAMH,aAAaU,MAAK,CAACC,EAAGC,IAAMD,EAAEE,KAAKC,UAAUF,EAAEC,OAAM,EAE7DE,kBAAoBtG,IAClB0F,EAAMH,aAAatF,OAAOD,EAAK,EAAE,EAEnCuG,OAAQ,KACNd,EAAIe,YAAYd,EAAM1F,IAAI,IAyBxB+F,EAAoBL,IAA8B,CACtD1F,KAAM,EACNoG,KACEV,EAAMH,aAAakB,IAAI,IAAIL,KAAKM,SAAS,IACzChB,EAAMN,aACN,KAAUuB,MACZ/D,YAAQyC,EACRzF,YAAQyF,EACRtC,UAAMsC,EACND,YAAaM,EAAMN,cCjIfwB,EAAa,IAAIC,KAAKC,WAAW,KAAM,CAC3CC,MAAO,OACPC,KAAM,gBAGFC,EAAc,IAAIJ,KAAKK,YAAY,MAEnCC,EAAiB,IAAIC,IAAiC,CAC1D,CAAC,MAAO,IACR,CAAC,QAAS,OAGNC,EAAY,CAACC,EAAcC,KAC/B,MAAMC,EAAOP,EAAYQ,OAAOF,GAEhC,MAAO,GAAGD,IADKH,EAAeO,IAAIF,IACT,ECHrBG,EAAiE,CACrE,QAAAlD,EAAS,IAACC,IACPA,EAAoBE,cAAc,UAAUgD,OAC/C,EACA,IAAArE,EAAML,OAAO,MAACC,EAAK,QAAEC,KACnB,MAAMuD,EAAM,KAAUA,MAChBrD,EAAOH,EAAMG,MAAQ,UACrBuE,EAAM1E,EAAMiC,YACd,KAAO0C,QAAQ3E,EAAMiC,YAAauB,GAClC,KAEEoB,EAAU,GAAGzE,IAAOuE,EAAM,KDLX,CAACG,IACxB,MAAMC,EAAQ,GAERC,EAAQF,EAAOE,QACfC,EAASH,EAAOG,SAChBC,EAAOJ,EAAOI,OAGpB,GAAIJ,EAAOK,aAET,MAAO,KACF,GAAIL,EAAOM,SAEhB,MAAO,KAGT,GAAIN,EAAOE,SAAW,MAAcF,EAAOE,SAAW,MACpD,MAAO,KAGT,GAAIF,EAAOE,SAAW,KACpB,MAAO,KAILA,EAAQ,GACVD,EAAMjC,KAAK,GAAGkC,KAASb,EAAU,OAAQa,MAIvCC,EAAS,GAAKD,EAAQ,IACxBD,EAAMjC,KAAK,GAAGmC,KAAUd,EAAU,QAASc,MAIzCC,EAAO,GAAKF,EAAQ,GAAKC,EAAS,GACpCF,EAAMjC,KAAK,GAAGoC,KAAQf,EAAU,MAAOe,MAGzC,MAAMG,EAAe3B,EAAW4B,OAAOP,GAGvC,OAAwB,IAApBD,EAAOG,UAAoC,IAAlBH,EAAOI,OAE3BG,EAAe,MAEfA,CACT,EC1CuCE,CAAUZ,SAAa,KAE5D,OAAO,IACL,UACA,CACE1C,KAAMhC,EAAMgC,KACZ7B,KAAM,WACNoF,SAAWhF,IACTP,EAAMgC,KAAsB,UAAfzB,EAAEiF,QAAoB,GAGvC,IACE,UACAZ,EACA,IACE,IACA,CACEa,KAAM,IACN7D,MAAO,OACP8D,QAAUnF,IACRA,EAAEoF,kBAIA3F,EAAMiC,aACNjC,EAAMoC,aAAa3F,QACnBuD,EAAMG,MACNH,EAAMV,OAEYsG,QAAQ,wBAAwBzF,QAClDF,EAAQmD,QACV,GAGJ,MA4IR,GA2JF,ICrVMyC,EAAU,CAACC,EAAarF,IAChB,gBAARqF,GAAiC,SAARA,EACpB,KAAUC,MAAMtF,GAElBA,EAGT,SAASuF,EAAehG,GACtB,OAAOiG,KAAKC,UAAUlG,EACxB,CAQA,SAASmG,EAAenG,GACtB,OAAOiG,KAAKF,MAAM/F,EAAO6F,EAC3B,CCZA,SAASO,EACPC,EACAjE,EACAlD,EACAoH,EACAC,GAGA,IAAIC,EAEJ,OAAQtH,GACN,KAAK,KAAWC,KACdqH,EAAW,KAAOC,OAAO,GACzB,MACF,KAAK,KAAWzH,MACdwH,EAAW,KAAOE,QAAQ,GAC1B,MACF,KAAK,KAAWhH,OACd8G,EAAW,KAAOG,SAAS,GAC3B,MACF,QACE,KAAM,yBAA2BzH,EAGrC,MAAM0H,EAAiC,CAAC/J,KAAM,EAAGoG,KAAMoD,GAGjDQ,EAAuBzE,EAAa0E,QACxCtH,IAAMA,EAAEyD,KAAK8D,SAASV,KAGlBW,EAAqBhL,MAAMsK,GAAY5J,KAAK,MAE5CuK,ECXR,SACE3K,EAAY,GACZ4K,EACAV,EAAmB,KAAOE,QAAQ,IAElC,MAAMS,EAAkC,GAExC,GAAoB,IAAhB7K,EAAKG,OACP,MAAO,CAAC0K,WAIV,MAAMC,EAAS,IAAI9K,GAAMwG,MAAK,CAACC,EAAGC,IAAMkE,EAAMnE,GAAGG,UAAUgE,EAAMlE,MAC3DqE,EAAUH,EAAME,EAAO,IAG7BD,EAAQtE,KAAK,CAACiD,IAAKuB,EAASC,OAAQ,CAACF,EAAO,MAE5C,IAAK,MAAMG,KAAaH,EAAOI,MAAM,GAAI,CACvC,MAAMvE,EAAOiE,EAAMK,GACnB,IAAIE,EAASN,EAAQA,EAAQ1K,OAAS,GAClCiL,EAAYD,EAAO3B,IAAI6B,KAAKnB,GAGhC,MAAQvD,EAAK8D,SAASW,IACpBD,EAAS,CAAC3B,IAAK4B,EAAWJ,OAAQ,IAClCI,EAAYA,EAAUC,KAAKnB,GAC3BW,EAAQtE,KAAK4E,GAIfA,EAAOH,OAAOzE,KAAK0E,EACrB,CAEA,MAAO,CAACJ,UACV,CDxBoBS,CAChB,CAAChB,KAAsBC,IACvBrH,GAAKA,EAAEyD,MACPuD,GAGIqB,ECrCR,SACED,EACAE,EACAC,EAAiDC,KAAKC,KAEtD,MAAMC,EAAoD,GAG1D,IAAK,MAAMT,KAAUG,EAAcT,QAAS,CAC1C,MAIMgB,EAAkBJ,KAJFN,EAAOH,OAC1BpL,IAAI4L,GACJhB,QAAQlK,KAAqBA,KAGhCsL,EAAkBrF,KAAK,CAACiD,IAAK2B,EAAO3B,IAAKrF,MAAO0H,GAClD,CAEA,MAAO,CAAChB,QAASe,EACnB,CDmB+BE,CAC3BnB,EACAV,GAGF,IAAK,MAAOnC,EAAGqD,KAAWI,EAAqBV,QAAQxG,UAAW,CAChE,GAAIyD,GAAKkC,EACP,MAIF,MAAM6B,EAAkBE,OAAOC,SAASb,EAAOhH,OAASgH,EAAOhH,MAAQ,KAEvEuG,EAAWlK,OAAOsH,EAAG,EAAG+D,EAC1B,CAEA,OAAOnB,CACT,CAEA,MAAMuB,EAA2D,CAC/D,MAAAzI,EAAQC,OAAO,QAACE,KAEd,MAAM3D,EAAOkM,aAAaC,QAAQ5G,GAClC,GAAa,OAATvF,EAAe,CACjB,MAAM0D,EAAiBmG,EAAY7J,GACnC2D,EAAQyI,OAAO1I,EACjB,CACF,EAEA,QAAA0B,EAAU3B,OAAO,MAACC,KAEhBwI,aAAaG,QAAQ9G,EAAmBmE,EAAYhG,EAAM4I,UAC5D,EAEA,IAAAxI,EAAML,OAAO,MAACC,EAAK,QAAEC,KACnB,MAAM2I,EAAW5I,EAAM4I,SAAS1M,KAAI,CAACqG,EAAO1F,KAC1C0F,EAAM1F,IAAMA,EAEZ0F,EAAMJ,UAAYL,EAAQjF,EAAMiF,EAAQrF,QACjC,IAAE,EAAgB,CACvBuD,MAAOuC,EACPtC,QAASoC,EAAapC,EAASsC,QAKnC,GAAIvC,EAAMY,MAAMI,OAAQ,CACtB,MAAM,KAAC1E,EAAI,OAAE8C,EAAM,SAAEF,EAAQ,IAAEI,EAAG,WAAEC,GAAcS,EAAMY,MAAMI,OACxD6H,EAAcvM,EAAKW,QAAQR,QAAU,EAErCqM,EAA4B9I,EAAM4I,SACrC9B,QAAOiC,GAAKA,EAAE9G,cACd6E,QAAOiC,GAAc,MAATA,EAAEzJ,KAAeyJ,EAAEzJ,MAAQA,IACvCpD,KAAI6M,IAAK,CACR5I,KAAM,SAAS4I,EAAElM,MACjBsE,UAAW,aAAaC,OAAOC,aAAa,GAAK0H,EAAElM,IAAM,KACzDP,KAAM8J,EACJ2C,EAAE9G,YAAa0F,KAAKvI,GACpB2J,EAAE3G,aACFlD,EACA2J,EACAtJ,OAINS,EAAMY,MAAMtE,KAAOwM,CACrB,CAEA,MAAO,CAELF,EAWA,IAAE/I,EAAwB,CACxBG,MAAOA,EAAMY,MACbX,SJ6BcW,EI7BQZ,EAAMY,MJ6BkB,CACpDV,UAAYC,IACV,MAAMa,EAAS,EAAOb,GAClBa,IACFJ,EAAMT,KAAOA,EACbS,EAAMI,OAASA,GAEjBgI,QAAQC,IAAI,iBAAkB9I,EAAK,MIlCjC,IAAEU,EAAgBb,EAAMY,OAExB,IAAEsI,EAAyB,CAAClJ,QAAOC,aJyBpB,IAACW,CIvBpB,GAGIsI,EAAsE,CAC1E9I,KAAI,EAAEL,OAAO,MAACC,EAAK,QAAEC,ODhIvB,SAAiCD,GAC/B,MAAMmJ,EAAkBnD,EAAYhG,GApB7BoJ,KACLC,mBAoBoCF,GApBZG,QAAQ,mBAAmB,CAACC,EAAOC,IAClDpI,OAAOC,aAAaoI,SAASD,EAAI,OAqB9C,CC6HqBE,CAAqB1J,EAAM4I,UAErC,IACL,WACA,IAAE,SAAU,mBACZ,IACE,KAUA,IACE,KACA,IAAE,QAAS,CAACe,IAAK,SAAU/H,MAAO,QAAS,eAC3C,IACE,SACA,CACE8D,QAAS,KACPkE,MAAM,+BACLC,MAAMC,GAAaA,EAASC,SAC5BF,MAAMvN,IACL,MAAM0D,EAAiBmG,EAAYF,KAAKC,UAAU5J,IAClD2D,EAAQyI,OAAO1I,GAGfgJ,QAAQC,IAAI3M,EAAK,IAElB0N,OAAOC,GAAUjB,QAAQiB,MAAM,0BAA2BA,IAAO,GAGtE,kBA4BZ,IEhNMjK,ENSsB,CAC1B4I,SAAU,CAAC7G,KACXnB,MAkJ8B,CAC9BT,KAAM,wBACNa,YAAQkB,EACR5F,KAAM,KM/JF2D,ENoBa,CAACqC,IAA0B,CAC5C4H,SAAU,CAAC3H,EAAeR,OACpBQ,EAAMP,MACRM,EAAIsG,SAASjM,SAAQoM,GAAMA,EAAE/G,MAAO,IAEtCM,EAAIsG,SAAS/F,KAAKN,EAAM,EAE1Bc,YAAcxG,IACZyF,EAAIsG,SAAS9L,OAAOD,EAAK,EAAE,EAE7B6L,OAAQE,IACNtG,EAAIsG,SAAWA,CAAQ,IM/BXuB,CAAWnK,GAE3B,UAAQoK,SAASC,KAAM,CAACjK,KAAM,IAAM,IAAE,EAAK,CAACJ,QAAOC,a","sources":["webpack://child-growth-charts/./src/data/who.ts","webpack://child-growth-charts/./src/views/chart.ts","webpack://child-growth-charts/./src/models/constants.ts","webpack://child-growth-charts/./src/models/state.ts","webpack://child-growth-charts/./src/models/format.ts","webpack://child-growth-charts/./src/views/child.ts","webpack://child-growth-charts/./src/models/export.ts","webpack://child-growth-charts/./src/views/app.ts","webpack://child-growth-charts/./src/models/timeseries.ts","webpack://child-growth-charts/./src/index.ts"],"sourcesContent":["import {ChronoUnit, Period} from '@js-joda/core';\nimport {\n  LineChartData,\n  LineChartOptions,\n  Interpolation,\n  Series,\n  SeriesObject,\n} from 'chartist';\nimport {Measurement, Sex} from '../models/state';\n\n/**\n * Generates sequence of numbers from zero.\n * @ param {number} count Count of numbers in result array.\n * @ return {Array<number>} Sequence of numbers from zero to (count - 1).\n */\nfunction sequence(count: number): Array<number> {\n  return Array.apply(0, Array(count)).map((x: unknown, i: number) => {\n    return i;\n  });\n}\n\nfunction stretch(data: unknown[], factor = 1) {\n  const r = Array(data.length * factor).fill(null);\n  data.forEach((v, idx) => {\n    r.splice(idx * factor, 1, v);\n  });\n  return r;\n}\n\nfunction stretchGraph(graph: LineChartData, factor = 1): LineChartData {\n  return {\n    labels: stretch(graph.labels ?? [], factor),\n    series: graph.series.map(s => stretch(s as Series, factor)),\n  };\n}\n\nconst PERCENTILES = [\n  'percentile-3',\n  'percentile-15',\n  'percentile-50',\n  'percentile-85',\n  'percentile-97',\n];\n\nfunction asSeriesObject(\n  data: Series[],\n  names: string[] = PERCENTILES\n): SeriesObject[] {\n  return data.map((series, idx) => ({\n    name: names[idx],\n    data: series,\n  }));\n}\n\nconst whoWfaBoys13Weeks: LineChartData = {\n  // A labels array that can contain any sort of values\n  labels: sequence(14),\n  // Our series array that contains series objects or in this case series data arrays\n  series: [\n    // 3rd percentile\n    [2.5, 2.6, 2.8, 3.1, 3.4, 3.6, 3.8, 4.1, 4.3, 4.4, 4.6, 4.8, 4.9, 5.1],\n    // 15th percentile\n    [2.9, 3.0, 3.2, 3.5, 3.8, 4.1, 4.3, 4.5, 4.7, 4.9, 5.1, 5.3, 5.5, 5.6],\n    // median\n    [3.3, 3.5, 3.8, 4.1, 4.4, 4.7, 4.9, 5.2, 5.4, 5.6, 5.8, 6.0, 6.2, 6.4],\n    // 85th percentile\n    [3.9, 4.0, 4.3, 4.7, 5.0, 5.3, 5.6, 5.9, 6.2, 6.4, 6.6, 6.8, 7.0, 7.2],\n    // 97th percentile\n    [4.3, 4.5, 4.9, 5.2, 5.6, 5.9, 6.3, 6.5, 6.8, 7.1, 7.3, 7.5, 7.7, 7.9],\n  ],\n};\n\nconst whoWfaBoys5Years: LineChartData = {\n  labels: sequence(60).map(month => (month % 3 === 0 ? month : '')),\n  series: [\n    [\n      2.5, 3.4, 4.4, 5.1, 5.6, 6.1, 6.4, 6.7, 7, 7.2, 7.5, 7.7, 7.8, 8, 8.2,\n      8.4, 8.5, 8.7, 8.9, 9, 9.2, 9.3, 9.5, 9.7, 9.8, 10, 10.1, 10.2, 10.4,\n      10.5, 10.7, 10.8, 10.9, 11.1, 11.2, 11.3, 11.4, 11.6, 11.7, 11.8, 11.9,\n      12.1, 12.2, 12.3, 12.4, 12.5, 12.7, 12.8, 12.9, 13, 13.1, 13.3, 13.4,\n      13.5, 13.6, 13.7, 13.8, 13.9, 14.1, 14.2, 14.3,\n    ],\n    [\n      2.9, 3.9, 4.9, 5.6, 6.2, 6.7, 7.1, 7.4, 7.7, 7.9, 8.2, 8.4, 8.6, 8.8, 9,\n      9.2, 9.4, 9.6, 9.7, 9.9, 10.1, 10.3, 10.5, 10.6, 10.8, 11, 11.1, 11.3,\n      11.5, 11.6, 11.8, 11.9, 12.1, 12.2, 12.4, 12.5, 12.7, 12.8, 12.9, 13.1,\n      13.2, 13.4, 13.5, 13.6, 13.8, 13.9, 14.1, 14.2, 14.3, 14.5, 14.6, 14.7,\n      14.9, 15, 15.2, 15.3, 15.4, 15.6, 15.7, 15.8, 16,\n    ],\n    [\n      3.3, 4.5, 5.6, 6.4, 7, 7.5, 7.9, 8.3, 8.6, 8.9, 9.2, 9.4, 9.6, 9.9, 10.1,\n      10.3, 10.5, 10.7, 10.9, 11.1, 11.3, 11.5, 11.8, 12, 12.2, 12.4, 12.5,\n      12.7, 12.9, 13.1, 13.3, 13.5, 13.7, 13.8, 14, 14.2, 14.3, 14.5, 14.7,\n      14.8, 15, 15.2, 15.3, 15.5, 15.7, 15.8, 16, 16.2, 16.3, 16.5, 16.7, 16.8,\n      17, 17.2, 17.3, 17.5, 17.7, 17.8, 18, 18.2, 18.3,\n    ],\n    [\n      3.9, 5.1, 6.3, 7.2, 7.9, 8.4, 8.9, 9.3, 9.6, 10, 10.3, 10.5, 10.8, 11.1,\n      11.3, 11.6, 11.8, 12, 12.3, 12.5, 12.7, 13, 13.2, 13.4, 13.7, 13.9, 14.1,\n      14.4, 14.6, 14.8, 15, 15.2, 15.5, 15.7, 15.9, 16.1, 16.3, 16.5, 16.7,\n      16.9, 17.1, 17.3, 17.5, 17.7, 17.9, 18.1, 18.3, 18.5, 18.7, 18.9, 19.1,\n      19.3, 19.5, 19.7, 19.9, 20.1, 20.3, 20.5, 20.7, 20.9, 21.1,\n    ],\n    [\n      4.3, 5.7, 7, 7.9, 8.6, 9.2, 9.7, 10.2, 10.5, 10.9, 11.2, 11.5, 11.8, 12.1,\n      12.4, 12.7, 12.9, 13.2, 13.5, 13.7, 14, 14.3, 14.5, 14.8, 15.1, 15.3,\n      15.6, 15.9, 16.1, 16.4, 16.6, 16.9, 17.1, 17.3, 17.6, 17.8, 18, 18.3,\n      18.5, 18.7, 19, 19.2, 19.4, 19.7, 19.9, 20.1, 20.4, 20.6, 20.9, 21.1,\n      21.3, 21.6, 21.8, 22.1, 22.3, 22.5, 22.8, 23, 23.3, 23.5, 23.8,\n    ],\n  ],\n};\n\nconst whoWfaGirls13Weeks: LineChartData = {\n  labels: sequence(14),\n  series: [\n    // 3rd percentile\n    [2.4, 2.5, 2.7, 2.9, 3.1, 3.3, 3.5, 3.7, 3.9, 4.1, 4.2, 4.3, 4.5, 4.6],\n    // 15th percentile\n    [2.8, 2.9, 3.1, 3.3, 3.5, 3.8, 4.0, 4.2, 4.4, 4.5, 4.7, 4.8, 5.0, 5.1],\n    // median\n    [3.2, 3.3, 3.6, 3.8, 4.1, 4.3, 4.6, 4.8, 5.0, 5.2, 5.4, 5.5, 5.7, 5.8],\n    // 85th percentile\n    [3.7, 3.9, 4.1, 4.4, 4.7, 5.0, 5.3, 5.5, 5.7, 5.9, 6.1, 6.3, 6.5, 6.7],\n    // 97th percentile\n    [4.2, 4.4, 4.6, 5.0, 5.3, 5.6, 5.9, 6.1, 6.4, 6.6, 6.8, 7.0, 7.2, 7.4],\n  ],\n};\n\nconst whoWfaGirls5Years: LineChartData = {\n  labels: sequence(60).map(month => (month % 3 === 0 ? month : '')),\n  series: [\n    [\n      2.4, 3.2, 4, 4.6, 5.1, 5.5, 5.8, 6.1, 6.3, 6.6, 6.8, 7, 7.1, 7.3, 7.5,\n      7.7, 7.8, 8, 8.2, 8.3, 8.5, 8.7, 8.8, 9, 9.2, 9.3, 9.5, 9.6, 9.8, 10,\n      10.1, 10.3, 10.4, 10.5, 10.7, 10.8, 11, 11.1, 11.2, 11.4, 11.5, 11.6,\n      11.8, 11.9, 12, 12.1, 12.3, 12.4, 12.5, 12.6, 12.8, 12.9, 13, 13.1, 13.2,\n      13.4, 13.5, 13.6, 13.7, 13.8, 14,\n    ],\n    [\n      2.8, 3.6, 4.5, 5.1, 5.6, 6.1, 6.4, 6.7, 7, 7.3, 7.5, 7.7, 7.9, 8.1, 8.3,\n      8.5, 8.7, 8.8, 9, 9.2, 9.4, 9.6, 9.8, 9.9, 10.1, 10.3, 10.5, 10.7, 10.8,\n      11, 11.2, 11.3, 11.5, 11.7, 11.8, 12, 12.1, 12.3, 12.5, 12.6, 12.8, 12.9,\n      13.1, 13.2, 13.4, 13.5, 13.7, 13.8, 14, 14.1, 14.3, 14.4, 14.5, 14.7,\n      14.8, 15, 15.1, 15.3, 15.4, 15.5, 15.7,\n    ],\n    [\n      3.2, 4.2, 5.1, 5.8, 6.4, 6.9, 7.3, 7.6, 7.9, 8.2, 8.5, 8.7, 8.9, 9.2, 9.4,\n      9.6, 9.8, 10, 10.2, 10.4, 10.6, 10.9, 11.1, 11.3, 11.5, 11.7, 11.9, 12.1,\n      12.3, 12.5, 12.7, 12.9, 13.1, 13.3, 13.5, 13.7, 13.9, 14, 14.2, 14.4,\n      14.6, 14.8, 15, 15.2, 15.3, 15.5, 15.7, 15.9, 16.1, 16.3, 16.4, 16.6,\n      16.8, 17, 17.2, 17.3, 17.5, 17.7, 17.9, 18, 18.2,\n    ],\n    [\n      3.7, 4.8, 5.9, 6.7, 7.3, 7.8, 8.3, 8.7, 9, 9.3, 9.6, 9.9, 10.2, 10.4,\n      10.7, 10.9, 11.2, 11.4, 11.6, 11.9, 12.1, 12.4, 12.6, 12.8, 13.1, 13.3,\n      13.6, 13.8, 14, 14.3, 14.5, 14.7, 15, 15.2, 15.4, 15.7, 15.9, 16.1, 16.3,\n      16.6, 16.8, 17, 17.3, 17.5, 17.7, 17.9, 18.2, 18.4, 18.6, 18.9, 19.1,\n      19.3, 19.5, 19.8, 20, 20.2, 20.4, 20.7, 20.9, 21.1, 21.3,\n    ],\n    [\n      4.2, 5.4, 6.5, 7.4, 8.1, 8.7, 9.2, 9.6, 10, 10.4, 10.7, 11, 11.3, 11.6,\n      11.9, 12.2, 12.5, 12.7, 13, 13.3, 13.5, 13.8, 14.1, 14.3, 14.6, 14.9,\n      15.2, 15.4, 15.7, 16, 16.2, 16.5, 16.8, 17, 17.3, 17.6, 17.8, 18.1, 18.4,\n      18.6, 18.9, 19.2, 19.5, 19.7, 20, 20.3, 20.6, 20.8, 21.1, 21.4, 21.7, 22,\n      22.2, 22.5, 22.8, 23.1, 23.3, 23.6, 23.9, 24.2, 24.4,\n    ],\n  ],\n};\n\nconst whoHfaBoys13Weeks: LineChartData = {\n  labels: sequence(14),\n  series: [\n    [\n      46.3, 47.5, 48.8, 49.8, 50.7, 51.7, 52.5, 53.4, 54.1, 54.9, 55.6, 56.3,\n      56.9, 57.6,\n    ],\n    [\n      47.9, 49.1, 50.4, 51.4, 52.4, 53.3, 54.2, 55.0, 55.8, 56.6, 57.3, 58.0,\n      58.7, 59.3,\n    ],\n    [\n      49.9, 51.1, 52.3, 53.4, 54.4, 55.3, 56.2, 57.1, 57.9, 58.7, 59.4, 60.1,\n      60.8, 61.4,\n    ],\n    [\n      51.8, 53.1, 54.3, 55.4, 56.4, 57.4, 58.3, 59.1, 60.0, 60.7, 61.5, 62.2,\n      62.9, 63.5,\n    ],\n    [\n      53.4, 54.7, 55.9, 57.0, 58.0, 59.0, 59.9, 60.8, 61.6, 62.4, 63.2, 63.9,\n      64.6, 65.2,\n    ],\n  ],\n};\n\nconst whoHfaBoys2Years: LineChartData = {\n  labels: sequence(25).map(month => (month % 3 === 0 ? month : '')),\n  series: [\n    [\n      46.3, 51.1, 54.7, 57.6, 60, 61.9, 63.6, 65.1, 66.5, 67.7, 69, 70.2, 71.3,\n      72.4, 73.4, 74.4, 75.4, 76.3, 77.2, 78.1, 78.9, 79.7, 80.5, 81.3, 82.1,\n    ],\n    [\n      47.9, 52.7, 56.4, 59.3, 61.7, 63.7, 65.4, 66.9, 68.3, 69.6, 70.9, 72.1,\n      73.3, 74.4, 75.5, 76.5, 77.5, 78.5, 79.5, 80.4, 81.3, 82.2, 83, 83.8,\n      84.6,\n    ],\n    [\n      49.9, 54.7, 58.4, 61.4, 63.9, 65.9, 67.6, 69.2, 70.6, 72, 73.3, 74.5,\n      75.7, 76.9, 78, 79.1, 80.2, 81.2, 82.3, 83.2, 84.2, 85.1, 86, 86.9, 87.8,\n    ],\n    [\n      51.8, 56.7, 60.5, 63.5, 66, 68.1, 69.8, 71.4, 72.9, 74.3, 75.6, 77, 78.2,\n      79.4, 80.6, 81.8, 82.9, 84, 85.1, 86.1, 87.1, 88.1, 89.1, 90, 91,\n    ],\n    [\n      53.4, 58.4, 62.2, 65.3, 67.8, 69.9, 71.6, 73.2, 74.7, 76.2, 77.6, 78.9,\n      80.2, 81.5, 82.7, 83.9, 85.1, 86.2, 87.3, 88.4, 89.5, 90.5, 91.6, 92.6,\n      93.6,\n    ],\n  ],\n};\n\nconst whoHfaBoys5Years: LineChartData = {\n  labels: sequence(37).map(month => (month % 3 === 0 ? month + 24 : '')),\n  series: [\n    [\n      81.4, 82.1, 82.8, 83.5, 84.2, 84.9, 85.5, 86.2, 86.8, 87.4, 88, 88.5,\n      89.1, 89.7, 90.2, 90.8, 91.3, 91.9, 92.4, 92.9, 93.4, 93.9, 94.4, 94.9,\n      95.4, 95.9, 96.4, 96.9, 97.4, 97.9, 98.4, 98.8, 99.3, 99.8, 100.3, 100.8,\n      101.2,\n    ],\n    [\n      83.9, 84.7, 85.5, 86.3, 87, 87.7, 88.4, 89.1, 89.7, 90.4, 91, 91.6, 92.2,\n      92.8, 93.4, 94, 94.6, 95.2, 95.7, 96.3, 96.8, 97.4, 97.9, 98.5, 99, 99.5,\n      100, 100.5, 101.1, 101.6, 102.1, 102.6, 103.1, 103.6, 104.1, 104.7, 105.2,\n    ],\n    [\n      87.1, 88, 88.8, 89.6, 90.4, 91.2, 91.9, 92.7, 93.4, 94.1, 94.8, 95.4,\n      96.1, 96.7, 97.4, 98, 98.6, 99.2, 99.9, 100.4, 101, 101.6, 102.2, 102.8,\n      103.3, 103.9, 104.4, 105, 105.6, 106.1, 106.7, 107.2, 107.8, 108.3, 108.9,\n      109.4, 110,\n    ],\n    [\n      90.3, 91.2, 92.1, 93, 93.8, 94.7, 95.5, 96.2, 97, 97.8, 98.5, 99.2, 99.9,\n      100.6, 101.3, 102, 102.7, 103.3, 104, 104.6, 105.2, 105.8, 106.5, 107.1,\n      107.7, 108.3, 108.9, 109.5, 110.1, 110.7, 111.2, 111.8, 112.4, 113, 113.6,\n      114.2, 114.8,\n    ],\n    [\n      92.9, 93.8, 94.8, 95.7, 96.6, 97.5, 98.3, 99.2, 100, 100.8, 101.5, 102.3,\n      103.1, 103.8, 104.5, 105.2, 105.9, 106.6, 107.3, 108, 108.6, 109.3, 109.9,\n      110.6, 111.2, 111.8, 112.5, 113.1, 113.7, 114.3, 115, 115.6, 116.2, 116.8,\n      117.4, 118.1, 118.7,\n    ],\n  ],\n};\n\nconst whoHfaGirls13Weeks: LineChartData = {\n  labels: sequence(14),\n  series: [\n    [\n      45.6, 46.8, 47.9, 48.8, 49.7, 50.5, 51.3, 52.1, 52.8, 53.4, 54.1, 54.7,\n      55.3, 55.8,\n    ],\n    [\n      47.2, 48.4, 49.5, 50.5, 51.4, 52.2, 53, 53.8, 54.5, 55.2, 55.8, 56.4, 57,\n      57.6,\n    ],\n    [\n      49.1, 50.3, 51.5, 52.5, 53.4, 54.2, 55.1, 55.8, 56.6, 57.3, 57.9, 58.6,\n      59.2, 59.8,\n    ],\n    [\n      51.1, 52.3, 53.5, 54.5, 55.4, 56.3, 57.1, 57.9, 58.7, 59.4, 60.1, 60.7,\n      61.4, 62,\n    ],\n    [\n      52.7, 53.9, 55.1, 56.1, 57, 57.9, 58.8, 59.6, 60.4, 61.1, 61.8, 62.5,\n      63.1, 63.7,\n    ],\n  ],\n};\n\nconst whoHfaGirls2Years: LineChartData = {\n  labels: sequence(25).map(month => (month % 3 === 0 ? month : '')),\n  series: [\n    [\n      45.6, 50, 53.2, 55.8, 58, 59.9, 61.5, 62.9, 64.3, 65.6, 66.8, 68, 69.2,\n      70.3, 71.3, 72.4, 73.3, 74.3, 75.2, 76.2, 77, 77.9, 78.7, 79.6, 80.3,\n    ],\n    [\n      47.2, 51.7, 55, 57.6, 59.8, 61.7, 63.4, 64.9, 66.3, 67.6, 68.9, 70.2,\n      71.3, 72.5, 73.6, 74.7, 75.7, 76.7, 77.7, 78.7, 79.6, 80.5, 81.4, 82.2,\n      83.1,\n    ],\n    [\n      49.1, 53.7, 57.1, 59.8, 62.1, 64, 65.7, 67.3, 68.7, 70.1, 71.5, 72.8, 74,\n      75.2, 76.4, 77.5, 78.6, 79.7, 80.7, 81.7, 82.7, 83.7, 84.6, 85.5, 86.4,\n    ],\n    [\n      51.1, 55.7, 59.2, 62, 64.3, 66.3, 68.1, 69.7, 71.2, 72.6, 74, 75.4, 76.7,\n      77.9, 79.2, 80.3, 81.5, 82.6, 83.7, 84.8, 85.8, 86.8, 87.8, 88.8, 89.8,\n    ],\n    [\n      52.7, 57.4, 60.9, 63.8, 66.2, 68.2, 70, 71.6, 73.2, 74.7, 76.1, 77.5,\n      78.9, 80.2, 81.4, 82.7, 83.9, 85, 86.2, 87.3, 88.4, 89.4, 90.5, 91.5,\n      92.5,\n    ],\n  ],\n};\n\nconst whoHfaGirls5Years: LineChartData = {\n  labels: sequence(37).map(month => (month % 3 === 0 ? month + 24 : '')),\n  series: [\n    [\n      79.6, 80.4, 81.2, 81.9, 82.6, 83.4, 84, 84.7, 85.4, 86, 86.7, 87.3, 87.9,\n      88.5, 89.1, 89.7, 90.3, 90.8, 91.4, 92, 92.5, 93, 93.6, 94.1, 94.6, 95.1,\n      95.7, 96.2, 96.7, 97.2, 97.6, 98.1, 98.6, 99.1, 99.6, 100, 100.5,\n    ],\n    [\n      82.4, 83.2, 84, 84.8, 85.5, 86.3, 87, 87.7, 88.4, 89.1, 89.8, 90.5, 91.1,\n      91.7, 92.4, 93, 93.6, 94.2, 94.8, 95.4, 96, 96.6, 97.2, 97.7, 98.3, 98.8,\n      99.4, 99.9, 100.4, 101, 101.5, 102, 102.5, 103, 103.5, 104, 104.5,\n    ],\n    [\n      85.7, 86.6, 87.4, 88.3, 89.1, 89.9, 90.7, 91.4, 92.2, 92.9, 93.6, 94.4,\n      95.1, 95.7, 96.4, 97.1, 97.7, 98.4, 99, 99.7, 100.3, 100.9, 101.5, 102.1,\n      102.7, 103.3, 103.9, 104.5, 105, 105.6, 106.2, 106.7, 107.3, 107.8, 108.4,\n      108.9, 109.4,\n    ],\n    [\n      89.1, 90, 90.9, 91.8, 92.7, 93.5, 94.3, 95.2, 95.9, 96.7, 97.5, 98.3, 99,\n      99.7, 100.5, 101.2, 101.9, 102.6, 103.3, 103.9, 104.6, 105.3, 105.9,\n      106.6, 107.2, 107.8, 108.4, 109.1, 109.7, 110.3, 110.9, 111.5, 112.1,\n      112.6, 113.2, 113.8, 114.4,\n    ],\n    [\n      91.8, 92.8, 93.7, 94.6, 95.6, 96.4, 97.3, 98.2, 99, 99.8, 100.6, 101.4,\n      102.2, 103, 103.7, 104.5, 105.2, 106, 106.7, 107.4, 108.1, 108.8, 109.5,\n      110.2, 110.8, 111.5, 112.1, 112.8, 113.4, 114.1, 114.7, 115.3, 116, 116.6,\n      117.2, 117.8, 118.4,\n    ],\n  ],\n};\n\nconst whoHcfaBoys13Weeks: LineChartData = {\n  labels: sequence(14),\n  series: [\n    [\n      32.1, 32.9, 33.7, 34.3, 34.9, 35.4, 35.9, 36.3, 36.7, 37, 37.4, 37.7, 38,\n      38.3,\n    ],\n    [\n      33.1, 33.9, 34.7, 35.3, 35.9, 36.4, 36.8, 37.3, 37.7, 38, 38.4, 38.7, 39,\n      39.3,\n    ],\n    [\n      34.5, 35.2, 35.9, 36.5, 37.1, 37.6, 38.1, 38.5, 38.9, 39.2, 39.6, 39.9,\n      40.2, 40.5,\n    ],\n    [\n      35.8, 36.4, 37.1, 37.7, 38.3, 38.8, 39.3, 39.7, 40.1, 40.5, 40.8, 41.1,\n      41.4, 41.7,\n    ],\n    [\n      36.9, 37.5, 38.1, 38.7, 39.3, 39.8, 40.3, 40.7, 41.1, 41.4, 41.8, 42.1,\n      42.4, 42.7,\n    ],\n  ],\n};\n\nconst whoHcfaGirls13Weeks: LineChartData = {\n  labels: sequence(14),\n  series: [\n    [\n      31.7, 32.4, 33.1, 33.7, 34.2, 34.6, 35, 35.4, 35.7, 36.1, 36.4, 36.7,\n      36.9, 37.2,\n    ],\n    [\n      32.7, 33.3, 34, 34.6, 35.2, 35.6, 36, 36.4, 36.8, 37.1, 37.4, 37.7, 38,\n      38.2,\n    ],\n    [\n      33.9, 34.6, 35.2, 35.8, 36.4, 36.8, 37.3, 37.7, 38, 38.4, 38.7, 39, 39.3,\n      39.5,\n    ],\n    [\n      35.1, 35.8, 36.4, 37, 37.6, 38.1, 38.5, 38.9, 39.3, 39.6, 39.9, 40.2,\n      40.5, 40.8,\n    ],\n    [\n      36.1, 36.7, 37.4, 38, 38.6, 39.1, 39.5, 39.9, 40.3, 40.6, 41, 41.3, 41.6,\n      41.9,\n    ],\n  ],\n};\n\nconst whoHcfaBoys5Years: LineChartData = {\n  labels: sequence(60).map(month => (month % 3 === 0 ? month : '')),\n  series: [\n    [\n      32.1, 35.1, 36.9, 38.3, 39.4, 40.3, 41, 41.7, 42.2, 42.6, 43, 43.4, 43.6,\n      43.9, 44.1, 44.3, 44.5, 44.7, 44.9, 45, 45.2, 45.3, 45.4, 45.6, 45.7,\n      45.8, 45.9, 46, 46.1, 46.2, 46.3, 46.4, 46.5, 46.6, 46.6, 46.7, 46.8,\n      46.9, 46.9, 47, 47, 47.1, 47.2, 47.2, 47.3, 47.3, 47.4, 47.4, 47.5, 47.5,\n      47.5, 47.6, 47.6, 47.7, 47.7, 47.7, 47.8, 47.8, 47.9, 47.9, 47.9,\n    ],\n    [\n      33.1, 36.1, 37.9, 39.3, 40.4, 41.3, 42.1, 42.7, 43.2, 43.7, 44.1, 44.4,\n      44.7, 45, 45.2, 45.5, 45.6, 45.8, 46, 46.2, 46.3, 46.4, 46.6, 46.7, 46.8,\n      47, 47.1, 47.2, 47.3, 47.4, 47.5, 47.6, 47.7, 47.8, 47.8, 47.9, 48, 48.1,\n      48.1, 48.2, 48.3, 48.3, 48.4, 48.4, 48.5, 48.5, 48.6, 48.6, 48.7, 48.7,\n      48.8, 48.8, 48.9, 48.9, 49, 49, 49, 49.1, 49.1, 49.2, 49.2,\n    ],\n    [\n      34.5, 37.3, 39.1, 40.5, 41.6, 42.6, 43.3, 44, 44.5, 45, 45.4, 45.8, 46.1,\n      46.3, 46.6, 46.8, 47, 47.2, 47.4, 47.5, 47.7, 47.8, 48, 48.1, 48.3, 48.4,\n      48.5, 48.6, 48.7, 48.8, 48.9, 49, 49.1, 49.2, 49.3, 49.4, 49.5, 49.5,\n      49.6, 49.7, 49.7, 49.8, 49.9, 49.9, 50, 50.1, 50.1, 50.2, 50.2, 50.3,\n      50.3, 50.4, 50.4, 50.4, 50.5, 50.5, 50.6, 50.6, 50.7, 50.7, 50.7,\n    ],\n    [\n      35.8, 38.5, 40.3, 41.7, 42.9, 43.8, 44.6, 45.3, 45.8, 46.3, 46.7, 47.1,\n      47.4, 47.7, 47.9, 48.2, 48.4, 48.6, 48.7, 48.9, 49.1, 49.2, 49.4, 49.5,\n      49.7, 49.8, 49.9, 50, 50.2, 50.3, 50.4, 50.5, 50.6, 50.7, 50.8, 50.8,\n      50.9, 51, 51.1, 51.2, 51.2, 51.3, 51.4, 51.4, 51.5, 51.6, 51.6, 51.7,\n      51.7, 51.8, 51.8, 51.9, 51.9, 52, 52, 52.1, 52.1, 52.2, 52.2, 52.2, 52.3,\n    ],\n    [\n      36.9, 39.5, 41.3, 42.7, 43.9, 44.8, 45.6, 46.3, 46.9, 47.4, 47.8, 48.2,\n      48.5, 48.8, 49, 49.3, 49.5, 49.7, 49.9, 50, 50.2, 50.4, 50.5, 50.7, 50.8,\n      50.9, 51.1, 51.2, 51.3, 51.4, 51.6, 51.7, 51.8, 51.9, 52, 52, 52.1, 52.2,\n      52.3, 52.4, 52.4, 52.5, 52.6, 52.7, 52.7, 52.8, 52.8, 52.9, 53, 53, 53.1,\n      53.1, 53.2, 53.2, 53.3, 53.3, 53.4, 53.4, 53.5, 53.5, 53.5,\n    ],\n  ],\n};\n\nconst whoHcfaGirls5Years: LineChartData = {\n  labels: sequence(60).map(month => (month % 3 === 0 ? month : '')),\n  series: [\n    [\n      31.7, 34.3, 36, 37.2, 38.2, 39, 39.7, 40.4, 40.9, 41.3, 41.7, 42, 42.3,\n      42.6, 42.9, 43.1, 43.3, 43.5, 43.6, 43.8, 44, 44.1, 44.3, 44.4, 44.6,\n      44.7, 44.8, 44.9, 45.1, 45.2, 45.3, 45.4, 45.5, 45.6, 45.7, 45.8, 45.9,\n      45.9, 46, 46.1, 46.2, 46.2, 46.3, 46.4, 46.4, 46.5, 46.5, 46.6, 46.7,\n      46.7, 46.8, 46.8, 46.9, 46.9, 47, 47, 47.1, 47.1, 47.2, 47.2, 47.2,\n    ],\n    [\n      32.7, 35.3, 37, 38.2, 39.3, 40.1, 40.8, 41.5, 42, 42.4, 42.8, 43.2, 43.5,\n      43.8, 44, 44.2, 44.4, 44.6, 44.8, 45, 45.1, 45.3, 45.4, 45.6, 45.7, 45.9,\n      46, 46.1, 46.3, 46.4, 46.5, 46.6, 46.7, 46.8, 46.9, 47, 47, 47.1, 47.2,\n      47.3, 47.4, 47.4, 47.5, 47.6, 47.6, 47.7, 47.7, 47.8, 47.9, 47.9, 48, 48,\n      48.1, 48.1, 48.2, 48.2, 48.3, 48.3, 48.4, 48.4, 48.4,\n    ],\n    [\n      33.9, 36.5, 38.3, 39.5, 40.6, 41.5, 42.2, 42.8, 43.4, 43.8, 44.2, 44.6,\n      44.9, 45.2, 45.4, 45.7, 45.9, 46.1, 46.2, 46.4, 46.6, 46.7, 46.9, 47,\n      47.2, 47.3, 47.5, 47.6, 47.7, 47.8, 47.9, 48, 48.1, 48.2, 48.3, 48.4,\n      48.5, 48.6, 48.7, 48.7, 48.8, 48.9, 49, 49, 49.1, 49.2, 49.2, 49.3, 49.3,\n      49.4, 49.4, 49.5, 49.5, 49.6, 49.6, 49.7, 49.7, 49.8, 49.8, 49.9, 49.9,\n    ],\n    [\n      35.1, 37.8, 39.5, 40.8, 41.9, 42.8, 43.5, 44.2, 44.7, 45.2, 45.6, 46,\n      46.3, 46.6, 46.8, 47.1, 47.3, 47.5, 47.7, 47.8, 48, 48.2, 48.3, 48.5,\n      48.6, 48.8, 48.9, 49, 49.2, 49.3, 49.4, 49.5, 49.6, 49.7, 49.8, 49.9, 50,\n      50.1, 50.1, 50.2, 50.3, 50.4, 50.4, 50.5, 50.6, 50.6, 50.7, 50.7, 50.8,\n      50.9, 50.9, 51, 51, 51.1, 51.1, 51.2, 51.2, 51.3, 51.3, 51.4, 51.4,\n    ],\n    [\n      36.1, 38.8, 40.5, 41.9, 43, 43.9, 44.6, 45.3, 45.9, 46.3, 46.8, 47.1,\n      47.5, 47.7, 48, 48.2, 48.5, 48.7, 48.8, 49, 49.2, 49.4, 49.5, 49.7, 49.8,\n      49.9, 50.1, 50.2, 50.3, 50.5, 50.6, 50.7, 50.8, 50.9, 51, 51.1, 51.2,\n      51.3, 51.3, 51.4, 51.5, 51.6, 51.6, 51.7, 51.8, 51.8, 51.9, 51.9, 52,\n      52.1, 52.1, 52.2, 52.2, 52.3, 52.3, 52.4, 52.4, 52.5, 52.5, 52.6, 52.6,\n    ],\n  ],\n};\n\nfunction options(axisXUnit: string, axisYUnit: string): LineChartOptions {\n  return {\n    lineSmooth: Interpolation.none({fillHoles: true}),\n    showPoint: true,\n    axisX: {\n      labelInterpolationFnc: val => (val ? `${val} ${axisXUnit}` : null),\n    },\n    axisY: {\n      labelInterpolationFnc: val => (val ? `${val} ${axisYUnit}` : null),\n    },\n    plugins: [],\n  };\n}\n\ntype ChartConfig = {\n  /** Name of the chart. */\n  label: string;\n  /** Percentile data sourced from the WHO growth tables. */\n  data: LineChartData;\n  /** Chart options. */\n  options: LineChartOptions;\n  /** The resolution of the chart as time unit, e.g. \"DAYS\" if\n      up to one measurement per day should be displayed. */\n  timeUnit: ChronoUnit;\n  /** Offset applied before measurements are included,\n      used for charts that don't start from birth.  */\n  offset: Period;\n  /** Sex that this chart applies to. */\n  sex: Sex;\n  /**Function to access the relevant data point from measurements. */\n  accessorFn: (m: Measurement) => number | undefined;\n};\ntype Dict<V> = {\n  [key: string]: V;\n};\n\nconst charts: Dict<ChartConfig> = {\n  'who-wfa-boys-13-weeks': {\n    label: 'Boys: Weight-for-age: Birth to 13 weeks',\n    data: stretchGraph(whoWfaBoys13Weeks, 7),\n    options: options(ChronoUnit.WEEKS.toString(), 'kg'),\n    timeUnit: ChronoUnit.DAYS,\n    offset: Period.ZERO,\n    sex: 'male',\n    accessorFn: m => m.weight,\n  },\n  'who-wfa-girls-13-weeks': {\n    label: 'Girls: Weight-for-age: Birth to 13 weeks',\n    data: stretchGraph(whoWfaGirls13Weeks, 7),\n    options: options(ChronoUnit.WEEKS.toString(), 'kg'),\n    timeUnit: ChronoUnit.DAYS,\n    offset: Period.ZERO,\n    sex: 'female',\n    accessorFn: m => m.weight,\n  },\n  'who-wfa-boys-5-years': {\n    label: 'Boys: Weight-for-age: Birth to 5 years',\n    data: whoWfaBoys5Years,\n    options: options(ChronoUnit.MONTHS.toString(), 'kg'),\n    timeUnit: ChronoUnit.MONTHS,\n    offset: Period.ZERO,\n    sex: 'male',\n    accessorFn: m => m.weight,\n  },\n  'who-wfa-girls-5-years': {\n    label: 'Girls: Weight-for-age: Birth to 5 years',\n    data: whoWfaGirls5Years,\n    options: options(ChronoUnit.MONTHS.toString(), 'kg'),\n    timeUnit: ChronoUnit.MONTHS,\n    offset: Period.ZERO,\n    sex: 'female',\n    accessorFn: m => m.weight,\n  },\n  'who-hfa-boys-13-weeks': {\n    label: 'Boys: Length-for-age: Birth to 13 weeks',\n    data: stretchGraph(whoHfaBoys13Weeks, 7),\n    options: options(ChronoUnit.WEEKS.toString(), 'cm'),\n    timeUnit: ChronoUnit.DAYS,\n    offset: Period.ZERO,\n    sex: 'male',\n    accessorFn: m => m.length,\n  },\n  'who-hfa-girls-13-weeks': {\n    label: 'Girls: Length-for-age: Birth to 13 weeks',\n    data: stretchGraph(whoHfaGirls13Weeks, 7),\n    options: options(ChronoUnit.WEEKS.toString(), 'cm'),\n    timeUnit: ChronoUnit.DAYS,\n    offset: Period.ZERO,\n    sex: 'female',\n    accessorFn: m => m.length,\n  },\n  'who-hfa-boys-2-years': {\n    label: 'Boys: Length-for-age: Birth to 2 years',\n    data: whoHfaBoys2Years,\n    options: options(ChronoUnit.MONTHS.toString(), 'cm'),\n    timeUnit: ChronoUnit.MONTHS,\n    offset: Period.ZERO,\n    sex: 'male',\n    accessorFn: m => m.length,\n  },\n  'who-hfa-girls-2-years': {\n    label: 'Girls: Length-for-age: Birth to 2 years',\n    data: whoHfaGirls2Years,\n    options: options(ChronoUnit.MONTHS.toString(), 'cm'),\n    timeUnit: ChronoUnit.MONTHS,\n    offset: Period.ZERO,\n    sex: 'female',\n    accessorFn: m => m.length,\n  },\n  'who-hfa-boys-5-years': {\n    label: 'Boys: Length-for-age: 2 to 5 years',\n    data: whoHfaBoys5Years,\n    options: options(ChronoUnit.MONTHS.toString(), 'cm'),\n    timeUnit: ChronoUnit.MONTHS,\n    offset: Period.ofYears(2),\n    sex: 'male',\n    accessorFn: m => m.length,\n  },\n  'who-hfa-girls-5-years': {\n    label: 'Girls: Length-for-age: 2 to 5 years',\n    data: whoHfaGirls5Years,\n    options: options(ChronoUnit.MONTHS.toString(), 'cm'),\n    timeUnit: ChronoUnit.MONTHS,\n    offset: Period.ofYears(2),\n    sex: 'female',\n    accessorFn: m => m.length,\n  },\n  'who-hcfa-boys-13-weeks': {\n    label: 'Boys: Head circumference for age: Birth to 13 weeks',\n    data: stretchGraph(whoHcfaBoys13Weeks, 7),\n    options: options(ChronoUnit.WEEKS.toString(), 'cm'),\n    timeUnit: ChronoUnit.DAYS,\n    offset: Period.ZERO,\n    sex: 'male',\n    accessorFn: m => m.head,\n  },\n  'who-hcfa-girls-13-weeks': {\n    label: 'Girls: Head circumference for age: Birth to 13 weeks',\n    data: stretchGraph(whoHcfaGirls13Weeks, 7),\n    options: options(ChronoUnit.WEEKS.toString(), 'cm'),\n    timeUnit: ChronoUnit.DAYS,\n    offset: Period.ZERO,\n    sex: 'female',\n    accessorFn: m => m.head,\n  },\n  'who-hcfa-boys-5-years': {\n    label: 'Boys: Head circumference for age: Birth to 5 years',\n    data: whoHcfaBoys5Years,\n    options: options(ChronoUnit.MONTHS.toString(), 'cm'),\n    timeUnit: ChronoUnit.MONTHS,\n    offset: Period.ZERO,\n    sex: 'male',\n    accessorFn: m => m.head,\n  },\n  'who-hcfa-girls-5-years': {\n    label: 'Girls: Head circumference for age: Birth to 5 years',\n    data: whoHcfaGirls5Years,\n    options: options(ChronoUnit.MONTHS.toString(), 'cm'),\n    timeUnit: ChronoUnit.MONTHS,\n    offset: Period.ZERO,\n    sex: 'female',\n    accessorFn: m => m.head,\n  },\n};\n\nexport default charts;\nexport {ChartConfig};\n","import m from 'mithril';\n\nimport {LineChart, LineChartData, SeriesObject, SeriesValue} from 'chartist';\nimport charts from '../data/who';\nimport {Chart, IChartActions, MitosisAttr} from '../models/state';\n\nconst ChartSelectorComponent: m.Component<MitosisAttr<Chart, IChartActions>> = {\n  oninit({attrs: {state, actions}}) {\n    actions.loadChart(state.name);\n  },\n  view({attrs: {state, actions}}) {\n    return m(\n      'fieldset',\n      m('legend', 'Child Growth Standard'),\n      m(\n        'ul',\n        m(\n          'li',\n          m(\n            'select',\n            {\n              id: 'chart-select',\n              onchange: (e: Event) =>\n                actions.loadChart((e.currentTarget as HTMLSelectElement).value),\n              value: state.name,\n            },\n            Object.entries(charts).map(([name, chart]) =>\n              m('option', {value: name}, chart.label)\n            )\n          )\n        )\n      )\n    );\n  },\n};\n\nfunction ChartComponent(): m.Component<Chart> {\n  let chart: LineChart;\n  let data: LineChartData;\n\n  function updateData(attrs: Chart) {\n    const baseData = attrs.config?.data ?? {\n      labels: [],\n      series: [],\n    };\n\n    // base data contains the percentile lines\n    // map percentiles to ct-series-{a,b,c}\n    const percentileNameSequence = [0, 1, 2, 1];\n    const base: SeriesObject<number>[] = baseData.series.map((s, i) => ({\n      name: `percentile-${i}`,\n      className: `ct-series-${String.fromCharCode(\n        97 + percentileNameSequence[i % 4]\n      )}`,\n      data: s as SeriesValue<number>[],\n    }));\n\n    // series data contains the measurement lines\n    data = {\n      labels: baseData.labels,\n      series: [...base, ...attrs.data],\n    };\n  }\n\n  return {\n    oninit({attrs}) {\n      // TODO use named series\n      updateData(attrs);\n    },\n    oncreate({dom, attrs}) {\n      const chartElement = dom.querySelector('#chart');\n      chart = new LineChart(chartElement, data, attrs.config?.options);\n      m.redraw();\n    },\n    onupdate({attrs}) {\n      updateData(attrs);\n      chart?.update(data, attrs.config?.options);\n    },\n    view({attrs}) {\n      return m(\n        'fieldset',\n        m('legend', attrs.config?.label),\n        m('div', {id: 'chart'}),\n        m(\n          'ul',\n          {class: 'ct-legend'},\n          m('li', {class: 'ct-series-a'}, '3th & 97th percentile'),\n          m('li', {class: 'ct-series-b'}, '15th & 85th percentile'),\n          m('li', {class: 'ct-series-c'}, '50th percentile')\n        )\n      );\n    },\n  };\n}\n\nexport {ChartSelectorComponent, ChartComponent};\n","export const LOCAL_STORAGE_KEY = 'growth-data';\n\n// see chart.scss\nexport const COLOURS = [\n  '#0544d3',\n  '#d17905',\n  '#59922b',\n  '#d70206',\n  '#6b0392',\n  '#f4c63d',\n  '#453d3f',\n  '#e6805e',\n  '#dda458',\n  '#eacf7d',\n  '#86797d',\n  '#b2c326',\n  '#6188e2',\n  '#a748ca',\n];\n","import {LocalDate} from '@js-joda/core';\nimport charts, {ChartConfig} from '../data/who';\nimport {SeriesObject} from 'chartist';\nimport {COLOURS} from './constants';\n\n// State and actions definitions\ntype MitosisAttr<S, A> = {\n  state: S;\n  actions: A;\n};\n\n// Root\ninterface App {\n  children: Child[];\n  chart: Chart;\n}\n\nconst AppState = (): App => ({\n  children: [ChildState()],\n  chart: ChartState(),\n});\n\ninterface IAppActions {\n  addChild(child?: Child): void;\n  removeChild(idx: number): void;\n\n  import(state: Child[]): void;\n}\n\nconst AppActions = (app: App): IAppActions => ({\n  addChild: (child: Child = ChildState()) => {\n    if (child.open) {\n      app.children.forEach(c => (c.open = false));\n    }\n    app.children.push(child);\n  },\n  removeChild: (idx: number) => {\n    app.children.splice(idx, 1);\n  },\n  import: children => {\n    app.children = children;\n  },\n});\n\ntype Sex = 'female' | 'male';\n\n// Child\ninterface Child {\n  idx: number;\n  name: string | null;\n  dateOfBirth?: LocalDate;\n  sex: Sex | null;\n  open: boolean;\n  colourHex?: string;\n  measurements: Measurement[];\n}\n\ninterface IChildActions {\n  update(\n    name: string | null,\n    dateOfBirth: LocalDate | undefined,\n    sex: Sex | null\n  ): void;\n  pickColour(hex: string): void;\n  addMeasurement(measurement?: Measurement): void;\n  removeMeasurement(idx: number): void;\n  remove(): void;\n}\n\nconst ChildState = (): Child => ({\n  idx: 0,\n  open: true,\n  name: null,\n  dateOfBirth: undefined,\n  sex: null,\n  colourHex: COLOURS[0],\n  measurements: [],\n});\n\nconst ChildActions = (app: IAppActions, child: Child): IChildActions => ({\n  update: (name: string, dateOfBirth: LocalDate, sex: Sex) => {\n    child.name = name;\n    child.dateOfBirth = dateOfBirth;\n    child.sex = sex;\n    child.measurements.forEach(m => (m.dateOfBirth = dateOfBirth));\n  },\n  pickColour: (hex: string) => {\n    child.colourHex = hex;\n  },\n  addMeasurement: (measurement: Measurement = MeasurementState(child)) => {\n    child.measurements.push(measurement);\n    child.measurements.sort((a, b) => a.date.compareTo(b.date));\n  },\n  removeMeasurement: (idx: number) => {\n    child.measurements.splice(idx, 1);\n  },\n  remove: () => {\n    app.removeChild(child.idx);\n  },\n});\n\n// Measurement\ninterface Measurement {\n  idx: number;\n  date: LocalDate;\n  weight?: number;\n  length?: number;\n  head?: number;\n\n  dateOfBirth?: LocalDate;\n}\n\ninterface IMeasurementActions {\n  update(\n    date: LocalDate,\n    weight?: number,\n    length?: number,\n    head?: number\n  ): void;\n  remove(): void;\n}\n\nconst MeasurementState = (child: Child): Measurement => ({\n  idx: -1,\n  date:\n    child.measurements.at(-1)?.date.plusDays(1) ??\n    child.dateOfBirth ??\n    LocalDate.now(),\n  weight: undefined,\n  length: undefined,\n  head: undefined,\n  dateOfBirth: child.dateOfBirth,\n});\n\nconst MeasurementActions = (\n  childActions: IChildActions,\n  measurement: Measurement\n): IMeasurementActions => ({\n  update: (\n    date: LocalDate,\n    weight?: number,\n    length?: number,\n    head?: number\n  ) => {\n    measurement.date = date;\n    measurement.weight = weight;\n    measurement.length = length;\n    measurement.head = head;\n  },\n  remove: () => {\n    childActions.removeMeasurement(measurement.idx);\n  },\n});\n\n// Chart\ninterface Chart {\n  name: string;\n  config?: ChartConfig;\n  data: SeriesObject[];\n}\n\ninterface IChartActions {\n  loadChart(name: string): void;\n}\n\nconst ChartState = (): Chart => ({\n  name: 'who-wfa-boys-13-weeks',\n  config: undefined,\n  data: [],\n});\n\nconst ChartActions = (chart: Chart): IChartActions => ({\n  loadChart: (name: string) => {\n    const config = charts[name];\n    if (config) {\n      chart.name = name;\n      chart.config = config;\n    }\n    console.log('Loaded chart: ', name);\n  },\n});\n\nexport {\n  MitosisAttr,\n  App,\n  AppState,\n  IAppActions,\n  AppActions,\n  Sex,\n  Child,\n  ChildState,\n  IChildActions,\n  ChildActions,\n  Measurement,\n  MeasurementState,\n  IMeasurementActions,\n  MeasurementActions,\n  Chart,\n  ChartState,\n  IChartActions,\n  ChartActions,\n};\n","import {Period} from '@js-joda/core';\n\nconst listFormat = new Intl.ListFormat('en', {\n  style: 'long',\n  type: 'conjunction',\n});\n\nconst pluralRules = new Intl.PluralRules('en');\n\nconst pluralSuffixes = new Map<Intl.LDMLPluralRule, string>([\n  ['one', ''],\n  ['other', 's'],\n]);\n\nconst pluralise = (word: string, n: number) => {\n  const rule = pluralRules.select(n);\n  const suffix = pluralSuffixes.get(rule);\n  return `${word}${suffix}`;\n};\n\nexport const formatAge = (period: Period) => {\n  const parts = [];\n\n  const years = period.years();\n  const months = period.months();\n  const days = period.days();\n\n  // Special dates\n  if (period.isNegative()) {\n    // not hatched yet\n    return '🥚';\n  } else if (period.isZero()) {\n    // welcome!\n    return '🐣';\n  }\n\n  if (period.years() >= 66_000_000 && period.years() <= 72_700_000) {\n    return '🦖';\n  }\n\n  if (period.years() >= 4_500_000_000) {\n    return '🌌';\n  }\n\n  // Always display years\n  if (years > 0) {\n    parts.push(`${years} ${pluralise('year', years)}`);\n  }\n\n  // Display months up to 20 years\n  if (months > 0 && years < 20) {\n    parts.push(`${months} ${pluralise('month', months)}`);\n  }\n\n  // Display days up to 3 months\n  if (days > 0 && years < 1 && months < 3) {\n    parts.push(`${days} ${pluralise('day', days)}`);\n  }\n\n  const formattedAge = listFormat.format(parts);\n\n  // Birthday\n  if (period.months() === 0 && period.days() === 0) {\n    // birthday!\n    return formattedAge + ' 🎈';\n  } else {\n    return formattedAge;\n  }\n};\n","import m from 'mithril';\n\nimport {\n  MitosisAttr,\n  Child,\n  IChildActions,\n  Measurement,\n  IMeasurementActions,\n  MeasurementActions,\n  Sex,\n} from '../models/state';\nimport {LocalDate, Period, convert} from '@js-joda/core';\nimport {formatAge} from '../models/format';\n\nconst ChildComponent: m.Component<MitosisAttr<Child, IChildActions>> = {\n  oncreate({dom}) {\n    (dom as HTMLElement).querySelector('input')?.focus();\n  },\n  view({attrs: {state, actions}}) {\n    const now = LocalDate.now();\n    const name = state.name ?? 'Unnamed';\n    const age = state.dateOfBirth\n      ? Period.between(state.dateOfBirth, now)\n      : null;\n\n    const summary = `${name}${age ? `, ${formatAge(age)} old` : ''}`;\n\n    return m(\n      'details',\n      {\n        open: state.open,\n        name: 'children',\n        ontoggle: (e: ToggleEvent) => {\n          state.open = e.newState === 'close';\n        },\n      },\n      m(\n        'summary',\n        summary,\n        m(\n          'a',\n          {\n            href: '#',\n            class: 'icon',\n            onclick: (e: Event) => {\n              e.preventDefault();\n\n              // Require user confirmation if state contains data\n              const needConfirm =\n                state.dateOfBirth ||\n                state.measurements.length ||\n                state.name ||\n                state.sex;\n\n              if (!needConfirm || confirm(`Delete all data for '${name}'?`)) {\n                actions.remove();\n              }\n            },\n          },\n          '✖'\n        )\n      ),\n      // m(\n      //   'form',\n      //   {\n      //     onsubmit: (e: SubmitEvent) => {\n      //       e.preventDefault();\n      //       actions.addMeasurement();\n      //     },\n      //   },\n      //   m(\n      //     'div',\n      //     {class: 'content'},\n      //     m(\n      //       'fieldset',\n      //       m('legend', 'Details'),\n      //       m(\n      //         'ul',\n      //         m(\n      //           'li',\n      //           m(\n      //             'label',\n      //             {class: 'main', for: `child-${state.idx}-dob`},\n      //             'Date of birth'\n      //           ),\n      //           /*\n      //           m(DateInput, {\n      //             state: {\n      //               id: `child-${state.idx}-dob`,\n      //               value: state.dateOfBirth,\n      //               required: true,\n      //               errorClass: \"invalid\",\n      //             },\n      //             actions: {\n      //               dateChanged: (date) => {\n      //                 actions.update(state.name, date, state.sex)\n      //               },\n      //             },\n      //           }),\n      //           */\n      //           m('input', {\n      //             className: !state.dateOfBirth ? 'invalid' : undefined,\n      //             type: 'date',\n      //             id: `child-${state.idx}-dob`,\n      //             value: state.dateOfBirth,\n      //             required: true,\n      //             onchange: (e: Event) => {\n      //               const value = (e.currentTarget as HTMLInputElement).value;\n      //               try {\n      //                 const dateOfBirth = value ? LocalDate.parse(value) : null;\n      //                 actions.update(\n      //                   state.name,\n      //                   dateOfBirth ?? state.dateOfBirth,\n      //                   state.sex\n      //                 );\n      //               } catch (e) {\n      //                 console.error('Failed to parse DOB', e);\n      //               }\n      //             },\n      //           }),\n      //           m('div', {class: 'error'}, '(required)')\n      //         ),\n      //         m(\n      //           'li',\n      //           m(\n      //             'label',\n      //             {class: 'main', for: `child-${state.idx}-name`},\n      //             'Name'\n      //           ),\n      //           m('input', {\n      //             type: 'text',\n      //             id: `child-${state.idx}-name`,\n      //             value: state.name,\n      //             onchange: (e: Event) => {\n      //               const name = (e.currentTarget as HTMLInputElement).value;\n      //               actions.update(name, state.dateOfBirth, state.sex);\n      //             },\n      //           })\n      //         ),\n      //         m(\n      //           'li',\n      //           m(\n      //             'label',\n      //             {class: 'main', for: `child-${state.idx}-sex`},\n      //             'Sex'\n      //           ),\n      //           m('input', {\n      //             type: 'radio',\n      //             name: `child-${state.idx}-sex`,\n      //             id: `child-${state.idx}-sex-female`,\n      //             value: 'female',\n      //             checked: state.sex === 'female',\n      //             onchange: (e: Event) => {\n      //               const sex = (e.currentTarget as HTMLInputElement)\n      //                 .value as Sex;\n      //               actions.update(state.name, state.dateOfBirth, sex);\n      //             },\n      //           }),\n      //           m('label', {for: `child-${state.idx}-sex-female`}, 'Girl'),\n      //           m('input', {\n      //             type: 'radio',\n      //             name: `child-${state.idx}-sex`,\n      //             id: `child-${state.idx}-sex-male`,\n      //             value: 'male',\n      //             checked: state.sex === 'male',\n      //             onchange: (e: Event) => {\n      //               const sex = (e.currentTarget as HTMLInputElement)\n      //                 .value as Sex;\n      //               actions.update(state.name, state.dateOfBirth, sex);\n      //             },\n      //           }),\n      //           m('label', {for: `child-${state.idx}-sex-male`}, 'Boy')\n      //         ),\n      //         m(\n      //           'li',\n      //           m(\n      //             'label',\n      //             {class: 'main', for: `child-${state.idx}-color`},\n      //             'Line colour'\n      //           ),\n      //           m('input', {\n      //             type: 'color',\n      //             id: `child-${state.idx}-color`,\n      //             value: state.colourHex,\n      //             // TODO enable this when colour is used in chart component\n      //             readonly: true,\n      //             disabled: true,\n      //             onchange: (e: Event) => {\n      //               const hex = (e.currentTarget as HTMLInputElement).value;\n      //               actions.pickColour(hex);\n      //             },\n      //           })\n      //         )\n      //       )\n      //     ),\n      //     m(MeasurementTableComponent, {state, actions})\n      //   )\n      // )\n    );\n  },\n};\n\nconst MeasurementTableComponent: m.Component<\n  MitosisAttr<Child, IChildActions>\n> = {\n  view({attrs: {state, actions}}) {\n    const rows = state.measurements.map((measurement, idx) => {\n      measurement.idx = idx;\n      return m(MeasurementRowComponent, {\n        state: measurement,\n        actions: MeasurementActions(actions, measurement),\n      });\n    });\n\n    return m(\n      'fieldset',\n      m('legend', 'Measurements'),\n      m(\n        'table',\n        m('caption', 'Growth measurements'),\n        m(\n          'thead',\n          m(\n            'tr',\n            m('th', 'Date'),\n            m('th', 'Age'),\n            m('th', 'Weight (kg)'),\n            m('th', 'Length (cm)'),\n            m('th', 'Head circumference (cm)')\n          )\n        ),\n        m('tbody', rows),\n        m('button', {type: 'submit'}, 'Add measurement')\n      )\n    );\n  },\n};\n\nconst MeasurementRowComponent: m.Component<\n  MitosisAttr<Measurement, IMeasurementActions>\n> = {\n  oncreate({dom}) {\n    (dom as HTMLElement).querySelector('input')?.focus();\n  },\n  view({attrs: {state, actions}}) {\n    return m(\n      'tr',\n      m(\n        'td',\n        {'data-label': 'Date of measurement'},\n        m('input', {\n          type: 'date',\n          name: `date-${state.idx}`,\n          value: state.date,\n          required: true,\n          onchange: (e: Event) => {\n            const value = (e.currentTarget as HTMLInputElement).value;\n            try {\n              const date = value ? LocalDate.parse(value) : null;\n              actions.update(\n                date ?? state.date,\n                state.weight,\n                state.length,\n                state.head\n              );\n            } catch (e) {\n              console.error('Failed to parse date', e);\n            }\n          },\n        })\n      ),\n      m(\n        'td',\n        {'data-label': 'Age at measurement'},\n        state.dateOfBirth\n          ? formatAge(Period.between(state.dateOfBirth, state.date))\n          : 'unknown'\n      ),\n      m(\n        'td',\n        {'data-label': 'Weight (kg)'},\n        m('input', {\n          type: 'number',\n          name: `weight-${state.idx}`,\n          value: state.weight,\n          min: 0,\n          step: 0.001,\n          onchange: (e: Event) => {\n            const weight = Number((e.currentTarget as HTMLInputElement).value);\n            actions.update(state.date, weight, state.length, state.head);\n          },\n        })\n      ),\n      m(\n        'td',\n        {'data-label': 'Length (cm)'},\n        m('input', {\n          type: 'number',\n          name: `length-${state.idx}`,\n          value: state.length,\n          step: 0.1,\n          onchange: (e: Event) => {\n            const length = Number((e.currentTarget as HTMLInputElement).value);\n            actions.update(state.date, state.weight, length, state.head);\n          },\n        })\n      ),\n      m(\n        'td',\n        {'data-label': 'Head circumference (cm)'},\n        m('input', {\n          type: 'number',\n          name: `head-${state.idx}`,\n          value: state.head,\n          step: 0.1,\n          onchange: (e: Event) => {\n            const head = Number((e.currentTarget as HTMLInputElement).value);\n            actions.update(state.date, state.weight, state.length, head);\n          },\n        })\n      ),\n      m(\n        'td',\n        {'data-label': 'Remove'},\n        m(\n          'a',\n          {\n            href: '#',\n            class: 'icon',\n            onclick: (e: Event) => {\n              e.preventDefault();\n\n              // Require user confirmation if state contains data\n              const needConfirm = state.head || state.length || state.weight;\n\n              if (\n                !needConfirm ||\n                confirm(\n                  `Delete measurements for '${convert(state.date)\n                    .toDate()\n                    .toLocaleDateString()}'?`\n                )\n              ) {\n                actions.remove();\n              }\n            },\n          },\n          '✖'\n        )\n      )\n    );\n  },\n};\n\nexport default ChildComponent;\n","import {LocalDate, Period} from '@js-joda/core';\n\n// https://stackoverflow.com/questions/30106476/using-javascripts-atob-to-decode-base64-doesnt-properly-decode-utf-8-strings\n// Encoding UTF-8 ⇢ base64\nfunction b64EncodeUnicode(str: string) {\n  return btoa(\n    encodeURIComponent(str).replace(/%([0-9A-F]{2})/g, (match, p1) => {\n      return String.fromCharCode(parseInt(p1, 16));\n    })\n  );\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nconst reviver = (key: string, value: any): any => {\n  if (key === 'dateOfBirth' || key === 'date') {\n    return LocalDate.parse(value);\n  }\n  return value;\n};\n\nfunction exportState<T>(state: T): string {\n  return JSON.stringify(state);\n}\n\nfunction exportStateBase64Url<T>(state: T): string {\n  const serialisedState = exportState(state);\n  const encodedState = b64EncodeUnicode(serialisedState);\n  return `data:application/json;base64,${encodedState}`;\n}\n\nfunction importState<T>(state: string): T {\n  return JSON.parse(state, reviver);\n}\n\nexport {exportState, exportStateBase64Url, importState};\n","import m from 'mithril';\n\nimport {ChartComponent, ChartSelectorComponent} from './chart';\n\nimport ChildComponent from './child';\nimport {\n  App,\n  ChartActions,\n  Child,\n  ChildActions,\n  IAppActions,\n  Measurement,\n  MitosisAttr,\n} from '../models/state';\nimport {Series, SeriesObject} from 'chartist';\nimport {ChronoUnit, LocalDate, Period} from '@js-joda/core';\nimport {exportState, exportStateBase64Url, importState} from '../models/export';\nimport {dateHistogram, dateHistogramAggregation} from '../models/timeseries';\nimport {COLOURS, LOCAL_STORAGE_KEY} from '../models/constants';\n\nfunction bucketInto(\n  origin: LocalDate,\n  measurements: Measurement[],\n  timeUnit: ChronoUnit,\n  maxBuckets: number,\n  fieldAccessor: (m: Measurement) => number | undefined\n): Series {\n  // as timeseries\n  let interval;\n\n  switch (timeUnit) {\n    case ChronoUnit.DAYS:\n      interval = Period.ofDays(1);\n      break;\n    case ChronoUnit.WEEKS:\n      interval = Period.ofWeeks(1);\n      break;\n    case ChronoUnit.MONTHS:\n      interval = Period.ofMonths(1);\n      break;\n    default:\n      throw 'Unsupported timeunit: ' + timeUnit;\n  }\n\n  const originMeasurement: Measurement = {idx: -1, date: origin};\n\n  // Drop anything before origin\n  const filteredMeasurements = measurements.filter(\n    m => !m.date.isBefore(origin)\n  );\n\n  const normalised: Series = Array(maxBuckets).fill(null);\n\n  const histogram = dateHistogram(\n    [originMeasurement, ...filteredMeasurements],\n    m => m.date,\n    interval\n  );\n\n  const histogramAggregation = dateHistogramAggregation(\n    histogram,\n    fieldAccessor\n  );\n\n  for (const [n, bucket] of histogramAggregation.buckets.entries()) {\n    if (n >= maxBuckets) {\n      break;\n    }\n\n    // Filter missing values as null\n    const aggregatedValue = Number.isFinite(bucket.value) ? bucket.value : null;\n\n    normalised.splice(n, 1, aggregatedValue);\n  }\n\n  return normalised;\n}\n\nconst AppComponent: m.Component<MitosisAttr<App, IAppActions>> = {\n  oninit({attrs: {actions}}) {\n    // load state from local storage\n    const data = localStorage.getItem(LOCAL_STORAGE_KEY);\n    if (data !== null) {\n      const state: Child[] = importState(data);\n      actions.import(state);\n    }\n  },\n\n  onupdate({attrs: {state}}) {\n    // save state into local storage\n    localStorage.setItem(LOCAL_STORAGE_KEY, exportState(state.children));\n  },\n\n  view({attrs: {state, actions}}) {\n    const children = state.children.map((child, idx) => {\n      child.idx = idx;\n      // TODO remove after colour picker is fully implemented\n      child.colourHex = COLOURS[idx % COLOURS.length];\n      return m(ChildComponent, {\n        state: child,\n        actions: ChildActions(actions, child),\n      });\n    });\n\n    // Populate chart data\n    if (state.chart.config) {\n      const {data, offset, timeUnit, sex, accessorFn} = state.chart.config!;\n      const bucketCount = data.labels?.length ?? 0;\n\n      const childData: SeriesObject[] = state.children\n        .filter(c => c.dateOfBirth)\n        .filter(c => c.sex == null || c.sex === sex)\n        .map(c => ({\n          name: `child-${c.idx}`,\n          className: `ct-series-${String.fromCharCode(97 + c.idx + 3)}`,\n          data: bucketInto(\n            c.dateOfBirth!.plus(offset),\n            c.measurements,\n            timeUnit,\n            bucketCount,\n            accessorFn\n          ),\n        }));\n\n      state.chart.data = childData;\n    }\n\n    return [\n      // m('h2#children', 'Data Bayi'),\n      children,\n      // m(\n      //   'button',\n      //   {\n      //     onclick: () => {\n      //       actions.addChild();\n      //     },\n      //   },\n      //   'Add child'\n      // ),\n      // m('h2#growth-chart', 'Grafik Pertumbuhan'),\n      m(ChartSelectorComponent, {\n        state: state.chart,\n        actions: ChartActions(state.chart),\n      }),\n      m(ChartComponent, state.chart),\n      // m('h2#your-data', 'Unduh/Unggah Data'),\n      m(DataManagementComponent, {state, actions}),\n    ];\n  },\n};\n\nconst DataManagementComponent: m.Component<MitosisAttr<App, IAppActions>> = {\n  view({attrs: {state, actions}}) {\n    const stateUrl = exportStateBase64Url(state.children);\n\n    return m(\n      'fieldset',\n      m('legend', 'Data management'),\n      m(\n        'ul',\n        // m(\n        //   'li',\n        //   m('label', {for: 'export', class: 'main'}, 'Export data'),\n        //   m(\n        //     'a',\n        //     {id: 'export', href: stateUrl, download: 'growth-data.json'},\n        //     '💾 Download'\n        //   )\n        // ),\n        m(\n          'li',\n          m('label', {for: 'import', class: 'main'}, 'Import data'),\n          m(\n            'button',\n            {\n              onclick: () => {\n                fetch('http://veda.loc/fenton.json')\n                .then((response) => response.json())\n                .then((data) => {\n                  const state: Child[] = importState(JSON.stringify(data));\n                  actions.import(state);\n                  // force redraw as this event is not managed by mithril\n                  // m.redraw();\n                  console.log(data);\n                })\n                .catch((error) => console.error(\"Error loading JSON file\", error));\n              },\n            },\n            'Load Data'\n          ), \n          // m('input', {\n          //   type: 'file',\n          //   id: 'import',\n          //   accept: 'application/json',\n          //   onchange: (e: Event) => {\n          //     const name = (e.currentTarget as HTMLInputElement).value;\n          //     const file = (e.currentTarget as HTMLInputElement).files?.[0];\n          //     const reader = new FileReader();\n          //     reader.onload = () => {\n          //       const state: Child[] = importState(reader.result as string);\n          //       actions.import(state);\n          //       // force redraw as this event is not managed by mithril\n          //       m.redraw();\n          //     };\n          //     if (file) {\n          //       reader.readAsText(file);\n          //       (e.currentTarget as HTMLInputElement).value = '';\n          //     }\n          //   },\n          // })\n        )\n      )\n    );\n  },\n};\n\nexport default AppComponent;\n","import {LocalDate, Period} from '@js-joda/core';\n\n// A bucket of grouped values.\ninterface Bucket<K, V> {\n  key: K;\n  values: V[];\n}\n\n// Timeseries bucketed by date\ninterface DateHistogram<T> {\n  buckets: Bucket<LocalDate, T>[];\n}\n\ninterface BucketAggregation<K> {\n  key: K;\n  value: number;\n}\n\ninterface DateHistogramAggregation {\n  buckets: BucketAggregation<LocalDate>[];\n}\n\nfunction dateHistogramAggregation<T>(\n  dateHistogram: DateHistogram<T>,\n  mapFn: (v: T) => number | undefined,\n  aggregationFn: (...values: number[]) => number = Math.min\n): DateHistogramAggregation {\n  const aggregatedBuckets: BucketAggregation<LocalDate>[] = [];\n\n  // aggregated values in date bucket\n  for (const bucket of dateHistogram.buckets) {\n    const numericValues = bucket.values\n      .map(mapFn)\n      .filter((v): v is number => !!v);\n\n    const aggregatedValue = aggregationFn(...numericValues);\n    aggregatedBuckets.push({key: bucket.key, value: aggregatedValue});\n  }\n\n  return {buckets: aggregatedBuckets};\n}\n\nfunction dateHistogram<T>(\n  data: T[] = [],\n  keyFn: (v: T) => LocalDate,\n  interval: Period = Period.ofWeeks(1)\n): DateHistogram<T> {\n  const buckets: Bucket<LocalDate, T>[] = [];\n\n  if (data.length === 0) {\n    return {buckets};\n  }\n\n  // sort input data\n  const sorted = [...data].sort((a, b) => keyFn(a).compareTo(keyFn(b)));\n  const minDate = keyFn(sorted[0]);\n\n  // first bucket\n  buckets.push({key: minDate, values: [sorted[0]]});\n\n  for (const datapoint of sorted.slice(1)) {\n    const date = keyFn(datapoint);\n    let bucket = buckets[buckets.length - 1];\n    let bucketEnd = bucket.key.plus(interval);\n\n    // Add empty buckets if required\n    while (!date.isBefore(bucketEnd)) {\n      bucket = {key: bucketEnd, values: []};\n      bucketEnd = bucketEnd.plus(interval);\n      buckets.push(bucket);\n    }\n\n    // Datapoint belongs into current bucket\n    bucket.values.push(datapoint);\n  }\n\n  return {buckets};\n}\n\nexport {dateHistogram, dateHistogramAggregation};\n","import m from 'mithril';\n\nimport App from './views/app';\nimport {AppActions, AppState} from './models/state';\n\nimport './styles/chart.scss';\nimport './styles/index.scss';\n\nconst state = AppState();\nconst actions = AppActions(state);\n\nm.mount(document.body, {view: () => m(App, {state, actions})});\n"],"names":["sequence","count","Array","apply","map","x","i","stretch","data","factor","r","length","fill","forEach","v","idx","splice","stretchGraph","graph","labels","series","s","whoWfaBoys13Weeks","whoWfaBoys5Years","month","whoWfaGirls13Weeks","whoWfaGirls5Years","whoHfaBoys13Weeks","whoHfaBoys2Years","whoHfaBoys5Years","whoHfaGirls13Weeks","whoHfaGirls2Years","whoHfaGirls5Years","whoHcfaBoys13Weeks","whoHcfaGirls13Weeks","whoHcfaBoys5Years","whoHcfaGirls5Years","options","axisXUnit","axisYUnit","lineSmooth","none","fillHoles","showPoint","axisX","labelInterpolationFnc","val","axisY","plugins","label","WEEKS","toString","timeUnit","DAYS","offset","ZERO","sex","accessorFn","m","weight","MONTHS","ofYears","head","ChartSelectorComponent","oninit","attrs","state","actions","loadChart","name","view","id","onchange","e","currentTarget","value","Object","entries","chart","ChartComponent","updateData","baseData","config","percentileNameSequence","base","className","String","fromCharCode","oncreate","dom","chartElement","querySelector","onupdate","update","class","LOCAL_STORAGE_KEY","COLOURS","ChildState","open","dateOfBirth","undefined","colourHex","measurements","ChildActions","app","child","pickColour","hex","addMeasurement","measurement","MeasurementState","push","sort","a","b","date","compareTo","removeMeasurement","remove","removeChild","at","plusDays","now","listFormat","Intl","ListFormat","style","type","pluralRules","PluralRules","pluralSuffixes","Map","pluralise","word","n","rule","select","get","ChildComponent","focus","age","between","summary","period","parts","years","months","days","isNegative","isZero","formattedAge","format","formatAge","ontoggle","newState","href","onclick","preventDefault","confirm","reviver","key","parse","exportState","JSON","stringify","importState","bucketInto","origin","maxBuckets","fieldAccessor","interval","ofDays","ofWeeks","ofMonths","originMeasurement","filteredMeasurements","filter","isBefore","normalised","histogram","keyFn","buckets","sorted","minDate","values","datapoint","slice","bucket","bucketEnd","plus","dateHistogram","histogramAggregation","mapFn","aggregationFn","Math","min","aggregatedBuckets","aggregatedValue","dateHistogramAggregation","Number","isFinite","AppComponent","localStorage","getItem","import","setItem","children","bucketCount","childData","c","console","log","DataManagementComponent","serialisedState","btoa","encodeURIComponent","replace","match","p1","parseInt","exportStateBase64Url","for","fetch","then","response","json","catch","error","addChild","AppActions","document","body"],"sourceRoot":""}